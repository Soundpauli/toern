
/private/var/folders/3h/f1rm8vzs1lv5ljhwy05p7nfhf1r72j/T/arduino/sketches/CAE5884321E348CD3F12901732F3E167/toern.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002bbc l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
000372b0 l    d  .fini	00000000 .fini
000372b4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200086c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
60042ee4 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60002354 l     F .text.code	0000002c flexspi2_command
60002380 l     F .text.code	00000034 flexspi2_psram_id
60001400 l     F .text.code	00000012 memory_copy
60001412 l     F .text.code	0000000e memory_clear
60001420 l     F .text.code	00000220 ResetHandler2
00000000 l    df *ABS*	00000000 toern.ino.cpp
0000098c l     F .text.itcm	0000004c __tcf_0
2003a924 l     O .bss	00001400 sliderDef
20200000 l     O .bss.dma	00010400 initSoundChip()::data
00012ab0 l     F .text.itcm	000034d0 _GLOBAL__sub_I_stepIsDue
2000adbc l     O .bss	00000004 guard variable for playNote()::lastEdit
2000ae40 l     O .bss	00000010 globalMutes
2000ae54 l     O .bss	00000004 smoothedBPM
2000ae58 l     O .bss	00000060 intervalsBuf
2000aeb8 l     O .bss	0000000c pendingNotes
2000aec4 l     O .bss	00000004 lastClockSent
2000aec8 l     O .bss	00000004 lastClockTime
2000aecc l     O .bss	0000000a prevMuteState
2003c947 l     O .bss	00000001 tmpMuteActive
2003c949 l     O .bss	00000001 midiClockTicks
2003c94a l     O .bss	00000001 lastBothTouched
2000afd8 l     O .bss	00000004 fastDropRemaining
2000afdc l     O .bss	00000040 fastRecWriteIndex
2000b01c l     O .bss	00000040 lastDefaultFastFilterValue
2000b088 l     O .bss	00000004 bufCount
2000b08c l     O .bss	00000004 bufIndex
2000b09c l     O .bss	00000100 pageMutes
2003c951 l     O .bss	00000001 setNewFilters()::lastTouch
2000b384 l     O .bss	00000004 playNote()::lastEdit
2000b388 l     O .bss	00000004 setVolume()::lastPos1
20007300 l     O .data	0000003c filterColors
20007438 l     O .data	00000004 handleAdditionalFeatureControls(int)::lastMicGain
2000743c l     O .data	00000004 handleAdditionalFeatureControls(int)::lastMonitorLevel
200083d8 l     O .data	00000001 handleAdditionalFeatureControls(int)::monMenuFirstEnter
200083d9 l     O .data	00000001 handleAdditionalFeatureControls(int)::recMenuFirstEnter
200083da l     O .data	00000001 showMenu()::menuFirstEnter
20007440 l     O .data	00000004 showMenu()::lastPagePosition
200083db l     O .data	00000001 setVolume()::firstCall
60001668 l     O .text.code	0000017c alphabet
60002bbc l     O .text.progmem	0000006c fullFrequencies
200026d0 l     O .data	00000003 UI_BG_DARK
200026d4 l     O .data	00000003 UI_DIM_RED
200026d8 l     O .data	00000003 UI_MAGENTA
200026dc l     O .data	0000001e col_Folder
200026fc l     O .data	0000000e helper_bpm
2000270c l     O .data	0000000a helper_vol
20002718 l     O .data	00000008 sliderCols
20002720 l     O .data	00000003 UI_DIM_BLUE
20002724 l     O .data	00000006 helper_exit
2000272c l     O .data	00000006 helper_load
20002734 l     O .data	00000006 helper_save
2000273c l     O .data	00000004 helper_seek
20002740 l     O .data	00000062 icon_delete
200027a4 l     O .data	00000026 icon_sample
200028f8 l     O .data	0000002c ALL_CHANNELS
20002924 l     O .data	00000003 UI_DIM_GREEN
20002928 l     O .data	00000003 UI_DIM_WHITE
2000292c l     O .data	00000003 UI_BRIGHT_RED
20002930 l     O .data	00000003 UI_DIM_YELLOW
20002934 l     O .data	0000000a helper_bright
20002940 l     O .data	0000000a helper_folder
2000294c l     O .data	00000006 helper_select
20002954 l     O .data	00000018 icon_loadsave
2000296c l     O .data	00000014 icon_settings
20002980 l     O .data	00000003 UI_DIM_MAGENTA
20002984 l     O .data	0000000e icon_loadsave2
20002994 l     O .data	00000003 UI_BRIGHT_GREEN
20002998 l     O .data	00000003 UI_BRIGHT_WHITE
2000299c l     O .data	00000024 icon_samplepack
200029c0 l     O .data	00000008 b_m16_interleave
200029c8 l     O .data	00000004 helper_seekstart
200029cc l     O .data	0000002d col
200029fc l     O .data	00000100 logo
20002afc l     O .data	00000060 noSD
20002b5c l     O .data	00000003 UI_RED
20002b60 l     O .data	00000003 UI_BLUE
20002b64 l     O .data	00000003 UI_CYAN
20002b68 l     O .data	00000003 UI_BLACK
20002b6c l     O .data	00000003 UI_GREEN
20002b70 l     O .data	00000003 UI_WHITE
20002b74 l     O .data	0000002d col_base
20002ba4 l     O .data	00000020 icon_bpm
20002bc4 l     O .data	0000000a icon_new
20002bd0 l     O .data	00000012 icon_rec
20002cb8 l     O .data	00000003 UI_BG_DIM
20002cbc l     O .data	00000003 UI_ORANGE
20002cc0 l     O .data	00000003 UI_YELLOW
20002cc4 l     O .data	0000000c icon_rec2
20003718 l     O .data	00000140 initSliderDefTemplates()::sliderDefTemplate
20003858 l     O .data	00000140 setSliderDefForChannel(int)::ch1_3Template
20003998 l     O .data	000000f0 setSliderDefForChannel(int)::ch4_8Template
20003a88 l     O .data	000000f0 setSliderDefForChannel(int)::ch13_14Template
00000000 l    df *ABS*	00000000 imxrt_hw.cpp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 AudioStream.cpp
00000000 l    df *ABS*	00000000 CrashReport.cpp
60001a90 l     F .text.code	00000048 isvalid(arm_fault_info_struct const*)
00000000 l    df *ABS*	00000000 tempmon.c
2003a860 l     O .bss	00000004 s_hotCount
2003a864 l     O .bss	00000004 s_hotTemp
2003a868 l     O .bss	00000004 s_hot_ROOM
2003a86c l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
000253a4 l     F .text.itcm	000000a8 endpoint0_transmit
0002544c l     F .text.itcm	000000ac endpoint0_receive
000254f8 l     F .text.itcm	00000088 schedule_transfer
00025580 l     F .text.itcm	00000036 run_callbacks
000255b6 l     F .text.itcm	0000001c usb_endpoint_config
2000baf4 l     O .bss	00000008 endpoint0_buffer
2000bafc l     O .bss	00000004 endpoint0_notify_mask
20008a60 l     O .bss	00000008 endpoint0_setupdata
2000bb00 l     O .bss	00000004 endpointN_notify_mask
2003a804 l     O .bss	00000008 reply_buffer
2003c96c l     O .bss	00000001 sof_usage
2003c979 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2003c955 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000f4 l     F .text.itcm	00000000 register_tm_clones
00000118 l     F .text.itcm	00000000 frame_dummy
20037f34 l     O .bss	00000000 object.0
60002b38 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 FastLED.cpp
00016c58 l     F .text.itcm	00000010 _GLOBAL__sub_I__Z19cled_contoller_sizev
2000aed8 l     O .bss	00000100 gControllersData
2000b090 l     O .bss	00000004 lastshow
2000b3f8 l     O .bss	00000004 CFastLED::countFPS(int)::br
2000b3fc l     O .bss	00000004 CFastLED::countFPS(int)::lastframe
00000000 l    df *ABS*	00000000 OjectFLED.cpp
000170ec l     F .text.itcm	00000064 _GLOBAL__sub_I_framebuffer_index
00000000 l    df *ABS*	00000000 async_input_spdif3.cpp
00017ad4 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN21AsyncAudioInputSPDIF310microsLastE
00000000 l    df *ABS*	00000000 input_adc.cpp
00019204 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN16AudioInputAnalog3dmaE
00000000 l    df *ABS*	00000000 input_i2s.cpp
0001945c l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE
20211800 l     O .bss.dma	00000200 i2s_rx_buffer
00000000 l    df *ABS*	00000000 input_i2s2.cpp
00019478 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN14AudioInputI2S210block_leftE
00000000 l    df *ABS*	00000000 input_i2s_hex.cpp
00019494 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN16AudioInputI2SHex9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_oct.cpp
000194b0 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN16AudioInputI2SOct9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_quad.cpp
000194cc l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E
00000000 l    df *ABS*	00000000 input_pdm.cpp
000194e8 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE
00000000 l    df *ABS*	00000000 input_pdm_i2s2.cpp
00019504 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN14AudioInputPDM210block_leftE
00000000 l    df *ABS*	00000000 input_spdif3.cpp
00019520 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN16AudioInputSPDIF310block_leftE
00000000 l    df *ABS*	00000000 input_tdm.cpp
0001953c l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE
00000000 l    df *ABS*	00000000 input_tdm2.cpp
00019558 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN14AudioInputTDM214block_incomingE
00000000 l    df *ABS*	00000000 output_i2s.cpp
00019b58 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE
20211a00 l     O .bss.dma	00000200 i2s_tx_buffer
00000000 l    df *ABS*	00000000 output_i2s2.cpp
00019b74 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN15AudioOutputI2S214block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s_hex.cpp
00019b90 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN17AudioOutputI2SHex13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_oct.cpp
00019bac l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN17AudioOutputI2SOct13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_quad.cpp
00019bc8 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_mqs.cpp
00019be4 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN14AudioOutputMQS14block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211.cpp
00019c00 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211_2.cpp
00019c1c l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN19AudioOutputPT8211_214block_left_1stE
00000000 l    df *ABS*	00000000 output_pwm.cpp
00019c38 l     F .text.itcm	00000018 __tcf_0
00019c50 l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN14AudioOutputPWM21update_responsibilityE
00000000 l    df *ABS*	00000000 output_spdif.cpp
00019c80 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif2.cpp
00019c9c l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN17AudioOutputSPDIF214block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif3.cpp
00019cb8 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN17AudioOutputSPDIF314block_left_1stE
00000000 l    df *ABS*	00000000 output_tdm.cpp
00019cd4 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE
00000000 l    df *ABS*	00000000 output_tdm2.cpp
00019cf0 l     F .text.itcm	0000001c _GLOBAL__sub_I__ZN15AudioOutputTDM211block_inputE
00000000 l    df *ABS*	00000000 SD.cpp
0001bc6c l     F .text.itcm	0000007c _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
00023954 l     F .text.itcm	00000090 pit_isr()
000239e4 l     F .text.itcm	00000020 __tcf_0
00023b84 l     F .text.itcm	0000002c _GLOBAL__sub_I__ZN13IntervalTimer14nvic_prioritesE
200086c0 l     O .bss	00000060 funct_table
00000000 l    df *ABS*	00000000 eh_alloc.o
00027e98 l     F .text.itcm	00000088 (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00027f20 l     F .text.itcm	00000058 (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00027fc8 l     F .text.itcm	00000028 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 usb_desc.c
20007ad4 l     O .data	00000012 device_descriptor
60003244 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 FastTouch.cpp
00000000 l    df *ABS*	00000000 WS2812Serial.cpp
00000000 l    df *ABS*	00000000 cled_controller.cpp
00000000 l    df *ABS*	00000000 colorutils.cpp
00000000 l    df *ABS*	00000000 crgb.cpp
00000000 l    df *ABS*	00000000 hsv2rgb.cpp
00000000 l    df *ABS*	00000000 engine_events.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00000000 l    df *ABS*	00000000 i2cEncoderLibV2.cpp
00000000 l    df *ABS*	00000000 analyze_peak.cpp
00000000 l    df *ABS*	00000000 control_sgtl5000.cpp
00000000 l    df *ABS*	00000000 effect_bitcrusher.cpp
00000000 l    df *ABS*	00000000 effect_envelope.cpp
00000000 l    df *ABS*	00000000 effect_freeverb.cpp
00018248 l     F .text.itcm	00000034 sat16(long, int)
20002cdc l     O .data	00000104 zeroblock
00000000 l    df *ABS*	00000000 filter_ladder.cpp
00000000 l    df *ABS*	00000000 filter_variable.cpp
00000000 l    df *ABS*	00000000 memcpy_audio.S.o
0001957c l       .text.itcm	00000000 .loopLR
000195c0 l       .text.itcm	00000000 .loopL
00019600 l       .text.itcm	00000000 .loopR
0001963c l       .text.itcm	00000000 .loopQuad
00000000 l    df *ABS*	00000000 mixer.cpp
0001966c l     F .text.itcm	00000024 applyGain(short*, long)
00000000 l    df *ABS*	00000000 play_sd_wav.cpp
00000000 l    df *ABS*	00000000 record_queue.cpp
00000000 l    df *ABS*	00000000 synth_dc.cpp
00000000 l    df *ABS*	00000000 synth_waveform.cpp
00000000 l    df *ABS*	00000000 synth_whitenoise.cpp
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
0001c5f4 l     F .text.itcm	0000003c exFatDirChecksum(unsigned char const*, unsigned short)
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
0001f620 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
00020ee4 l     F .text.itcm	0000002c sdIrs()
00020f10 l     F .text.itcm	00000020 gpioMux(unsigned char)
00020f30 l     F .text.itcm	00000018 isBusyCommandComplete()
00020f48 l     F .text.itcm	00000010 isBusyCommandInhibit()
00020f58 l     F .text.itcm	00000014 isBusyDat()
00020f6c l     F .text.itcm	0000000c isBusyDMA()
00020f78 l     F .text.itcm	00000014 isBusyFifoRead()
00020f8c l     F .text.itcm	00000014 isBusyFifoWrite()
00020fa0 l     F .text.itcm	00000018 isBusyTransferComplete()
00020fb8 l     F .text.itcm	000000d0 setSdclk(unsigned long)
0002117c l     F .text.itcm	00000024 waitTimeout(bool (*)())
000211a0 l     F .text.itcm	0000007c cardCommand(unsigned long, unsigned long)
0002121c l     F .text.itcm	00000074 readReg16(unsigned long, void*)
00021290 l     F .text.itcm	00000024 statusCMD13()
000212b4 l     F .text.itcm	00000010 isBusyCMD13()
000213e8 l     F .text.itcm	00000060 waitTransferComplete()
000214dc l     F .text.itcm	00000038 yieldTimeout(bool (*)())
00021514 l     F .text.itcm	00000034 waitDmaStatus()
00021548 l     F .text.itcm	00000090 cardCMD6(unsigned long, unsigned char*)
000215d8 l     F .text.itcm	0000007c transferStop()
000216d8 l     F .text.itcm	000000b0 rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
00021950 l     F .text.itcm	00000108 initSDHC()
2003c945 l     O .bss	00000001 m_initDone
2000add4 l     O .bss	00000004 m_sdClkKhz
2003c946 l     O .bss	00000001 m_version2
2000ae50 l     O .bss	00000004 m_errorLine
2003c948 l     O .bss	00000001 m_highCapacity
2003c94b l     O .bss	00000001 m_transferActive
2000b060 l     O .bss	00000010 m_cid
2000b070 l     O .bss	00000010 m_csd
2000b080 l     O .bss	00000004 m_ocr
2000b084 l     O .bss	00000004 m_rca
2000b094 l     O .bss	00000004 m_busyFcn
2003c94c l     O .bss	00000001 m_dmaBusy
2000b098 l     O .bss	00000004 m_irqstat
200083d7 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0002228c l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
200027cc l     O .data	0000012c lookupTable
20002be4 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 interpolation.cpp
00000000 l    df *ABS*	00000000 Mapf.cpp
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 HardwareSerial8.cpp
2000add8 l     O .bss	00000040 rx_buffer8
2000ae18 l     O .bss	00000028 tx_buffer8
2000733c l     O .data	00000060 UART5_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Time.cpp
20002cd0 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WMath.cpp
2000b05c l     O .bss	00000004 seed
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0002468c l     F .text.itcm	00000064 flash_wait
2003c95c l     O .bss	00000001 initialized
2003a878 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_midi.c
00025c6c l     F .text.itcm	0000006c rx_queue_transfer
00025cd8 l     F .text.itcm	00000068 rx_event
2003a80c l     O .bss	00000004 rx_available
2003a814 l     O .bss	0000000c rx_count
2003c966 l     O .bss	00000001 rx_head
2003a830 l     O .bss	0000000c rx_index
2003a84c l     O .bss	00000007 rx_list
2003c936 l     O .bss	00000002 rx_packet_size
2003c968 l     O .bss	00000001 rx_tail
200087a0 l     O .bss	000000c0 rx_transfer
2003c96f l     O .bss	00000001 transmit_previous_timeout
2003c93a l     O .bss	00000002 tx_available
2003c971 l     O .bss	00000001 tx_head
2003c973 l     O .bss	00000001 tx_noautoflush
2003c93e l     O .bss	00000002 tx_packet_size
20008960 l     O .bss	00000080 tx_transfer
20211e80 l     O .bss.dma	00000c00 rx_buffer
20212a80 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
00025e9c l     F .text.itcm	0000009c usb_serial_flush_callback
20214280 l     O .bss.dma	00002000 txbuffer
00025f38 l     F .text.itcm	0000006c rx_queue_transfer
20213280 l     O .bss.dma	00001000 rx_buffer
00025fa4 l     F .text.itcm	000000b4 rx_event
2003a810 l     O .bss	00000004 rx_available
2003a820 l     O .bss	00000010 rx_count
2003c967 l     O .bss	00000001 rx_head
2003a83c l     O .bss	00000010 rx_index
2003a854 l     O .bss	00000009 rx_list
2003c938 l     O .bss	00000002 rx_packet_size
2003c969 l     O .bss	00000001 rx_tail
20008860 l     O .bss	00000100 rx_transfer
2003c970 l     O .bss	00000001 transmit_previous_timeout
2003c93c l     O .bss	00000002 tx_available
2003c972 l     O .bss	00000001 tx_head
2003c974 l     O .bss	00000001 tx_noautoflush
2003c940 l     O .bss	00000002 tx_packet_size
200089e0 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 arm_fir_interpolate_init_f32.c
00000000 l    df *ABS*	00000000 arm_fir_interpolate_f32.c
00000000 l    df *ABS*	00000000 arm_fir_decimate_init_f32.c
00000000 l    df *ABS*	00000000 arm_fir_decimate_f32.c
00000000 l    df *ABS*	00000000 libm_a-sf_pow.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-sinf.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
00027994 l     F .text.itcm	00000018 with_errnof
000279ac l     F .text.itcm	0000001e xflowf
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-sf_modf.o
00000000 l    df *ABS*	00000000 libm_a-sf_ldexp.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-sf_fpclassify.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
00027b7c l     F .text.itcm	00000018 with_errno
00027b94 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-sf_finite.o
00000000 l    df *ABS*	00000000 libm_a-sf_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 new_opvnt.o
00000000 l    df *ABS*	00000000 functexcept.o
00000000 l    df *ABS*	00000000 functional.o
00000000 l    df *ABS*	00000000 bad_alloc.o
00000000 l    df *ABS*	00000000 eh_arm.o
00000000 l    df *ABS*	00000000 eh_catch.o
00000000 l    df *ABS*	00000000 eh_exception.o
00000000 l    df *ABS*	00000000 eh_globals.o
00000000 l    df *ABS*	00000000 eh_personality.o
000282b8 l     F .text.itcm	000000c0 read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00028378 l     F .text.itcm	00000048 base_of_encoded_value(unsigned char, _Unwind_Context*)
000283c0 l     F .text.itcm	00000090 parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000 l    df *ABS*	00000000 eh_terminate.o
00000000 l    df *ABS*	00000000 eh_throw.o
00028944 l     F .text.itcm	0000004c __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00000000 l    df *ABS*	00000000 si_class_type_info.o
00000000 l    df *ABS*	00000000 tinfo.o
00000000 l    df *ABS*	00000000 vterminate.o
00000000 l    df *ABS*	00000000 stdexcept.o
00000000 l    df *ABS*	00000000 cow-stdexcept.o
00000000 l    df *ABS*	00000000 cow-string-inst.o
00000000 l    df *ABS*	00000000 class_type_info.o
00000000 l    df *ABS*	00000000 cp-demangle.o
00029004 l     F .text.itcm	000000f0 d_make_comp
000290f4 l     F .text.itcm	00000074 d_number
00029168 l     F .text.itcm	00000046 d_call_offset
000291b0 l     F .text.itcm	00000036 d_ref_qualifier
000291e8 l     F .text.itcm	000000d4 d_count_templates_scopes
000292bc l     F .text.itcm	0000001c d_pack_length
000292d8 l     F .text.itcm	00000048 d_discriminator
00029320 l     F .text.itcm	0000001c d_index_template_argument.part.0
0002933c l     F .text.itcm	00000078 d_growable_string_callback_adapter
000293b4 l     F .text.itcm	00000030 next_is_type_qual.isra.0
000293e4 l     F .text.itcm	00000044 d_append_char
00029428 l     F .text.itcm	00000036 d_lookup_template_argument
00029460 l     F .text.itcm	00000094 d_find_pack
000294f4 l     F .text.itcm	00000066 d_append_string
0002955c l     F .text.itcm	0000005e d_template_param
000295bc l     F .text.itcm	00000078 d_append_num
00029634 l     F .text.itcm	000000e0 d_source_name
00029714 l     F .text.itcm	00000194 d_substitution
000298a8 l     F .text.itcm	0000086e d_type
0002aefc l     F .text.itcm	00000152 d_cv_qualifiers
0002a1e0 l     F .text.itcm	0000006a d_function_type
0002b4c4 l     F .text.itcm	0000029c d_name
0002a80c l     F .text.itcm	00000064 d_template_args_1
0002a99c l     F .text.itcm	000004ec d_expression_1
0002a118 l     F .text.itcm	00000080 d_parmlist
0002a198 l     F .text.itcm	00000048 d_bare_function_type
0002a24c l     F .text.itcm	00000108 d_operator_name
0002a354 l     F .text.itcm	00000340 d_unqualified_name
0002a694 l     F .text.itcm	00000120 d_expr_primary
0002b760 l     F .text.itcm	000000f6 d_encoding.part.0
0002b050 l     F .text.itcm	00000474 d_special_name
0002a7b4 l     F .text.itcm	00000058 d_template_arg
0002a870 l     F .text.itcm	0000012a d_prefix
0002ae88 l     F .text.itcm	00000072 d_exprlist
0002b858 l     F .text.itcm	000020f4 d_print_comp_inner
0002d94c l     F .text.itcm	0000005a d_print_comp
0002dfe0 l     F .text.itcm	000001d8 d_print_function_type
0002ea9c l     F .text.itcm	00000254 d_maybe_print_fold_expression
0002ecf0 l     F .text.itcm	000001e4 d_maybe_print_designated_init
0002e9c0 l     F .text.itcm	000000da d_print_subexpr
0002e5c8 l     F .text.itcm	00000076 d_print_expr_op
0002d9a8 l     F .text.itcm	00000638 d_print_mod
0002e400 l     F .text.itcm	000001c8 d_print_array_type
0002e1b8 l     F .text.itcm	00000248 d_print_mod_list
0002e640 l     F .text.itcm	0000037e d_demangle_callback.constprop.0
00000000 l    df *ABS*	00000000 eh_call.o
0002ef98 l     F .text.itcm	0000003a __cxxabiv1::__is_gxx_exception_class(char*)
00000000 l    df *ABS*	00000000 eh_type.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 unwind-arm.o
0002f764 l     F .text.itcm	00000012 selfrel_offset31
0002f778 l     F .text.itcm	0000005c search_EIT_table
0002f7d4 l     F .text.itcm	00000028 __gnu_unwind_get_pr_addr
0002f7fc l     F .text.itcm	00000098 get_eit_entry
0002f894 l     F .text.itcm	00000058 restore_non_core_regs
0002f8ec l     F .text.itcm	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
0002f8f8 l     F .text.itcm	00000002 _Unwind_DebugHook
0002f8fc l     F .text.itcm	0000003a unwind_phase2
0002f938 l     F .text.itcm	000000ca unwind_phase2_forced
0002fb14 l     F .text.itcm	0000001a _Unwind_GetGR
0002fb60 l     F .text.itcm	00000018 _Unwind_SetGR
0002fbfc l     F .text.itcm	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.o
00030318 l     F .text.itcm	00000038 next_unwind_byte
00030350 l     F .text.itcm	0000001a _Unwind_GetGR.constprop.0
0003036c l     F .text.itcm	00000004 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00031148 l     F .text.itcm	00000018 stdio_exit_handler
00031160 l     F .text.itcm	00000040 cleanup_stdio
000311a0 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fputc.o
00000000 l    df *ABS*	00000000 libc_a-fputs.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-fwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-putc.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00035080 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00035fbc l     F .text.itcm	00000076 __sprint_r.part.0
00036fc0 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libm_a-sf_exp2_data.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 libm_a-sf_pow_log2_data.o
00000000 l    df *ABS*	00000000 libm_a-sincosf_data.o
00000000 l    df *ABS*	00000000 data_waveforms.c
00000000 l    df *ABS*	00000000 new_handler.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 data_bandlimit_step.c
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 eh_term_handler.o
00000000 l    df *ABS*	00000000 eh_unex_handler.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 spi_interrupt.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 yield.cpp
00037280 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00037288 l     F .text.itcm	00000008 ___Z14set_audioClockilmb_veneer
00037290 l     F .text.itcm	00000008 ___init_veneer
00037298 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
000372a0 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
000372a8 l     F .text.itcm	00000008 ___ZN11AudioStream17initialize_memoryEP18audio_block_structj_veneer
60002ab0 l     F .text.code	00000008 __delay_veneer
60002ab8 l     F .text.code	00000008 ___ZN7TwoWire8setClockEm_veneer
60002ac0 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60002ac8 l     F .text.code	00000008 __main_veneer
60002ad0 l     F .text.code	00000008 ____libc_init_array_veneer
60002ad8 l     F .text.code	00000008 __sm_set_pool_veneer
60002ae0 l     F .text.code	00000008 __set_arm_clock_veneer
60002ae8 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
60002af0 l     F .text.code	00000008 __pwm_init_veneer
60002af8 l     F .text.code	00000008 ___ZZN6teensy23inplace_function_detail6vtableIvJEEC4IPFvvEEENS0_7wrapperIT_EEENUlPvS9_E0_4_FUNES9_S9__veneer
60002b00 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
60002b08 l     F .text.code	00000008 ___ZN13IntervalTimer11beginCyclesEN6teensy16inplace_functionIFvvELj16ELj8EEEm_veneer
60002b10 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002b18 l     F .text.code	00000008 ___Znwj_veneer
60002b20 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
60002b28 l     F .text.code	00000008 ___ZN11AudioStream12update_setupEv_veneer
60002b30 l     F .text.code	00000008 __memset_veneer
00027dd8 g     F .text.itcm	00000030 std::__throw_length_error(char const*)
200030d4 g     O .data	00000020 typeinfo name for __cxxabiv1::__forced_unwind
2003c942 g     O .bss	00000001 MIDI_VOICE_SELECT
7000603c g     O .bss.extram	0082d070 sampled
00028ce8 g     F .text.itcm	00000040 std::logic_error::~logic_error()
0001b7da  w    F .text.itcm	00000052 SDClass::mkdir(char const*)
0001f03c g     F .text.itcm	000000ac FatFile::makeUniqueSfn(FatLfn_t*)
70837558 g     O .bss.extram	00002244 note
00024ab8 g     F .text.itcm	00000010 main
0002f400 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
20003648 g     O .data	0000002c vtable for __cxxabiv1::__si_class_type_info
00027da8 g     F .text.itcm	00000030 std::__throw_logic_error(char const*)
000205b6  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00026058 g     F .text.itcm	00000002 usb_serial_reset
000027a4 g     F .text.itcm	00000020 toggleMute()
00028e78 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
0001c954 g     F .text.itcm	000000c0 ExFatFile::addDirCluster()
00031c7c g     F .text.itcm	00000024 _sbrk_r
00020012 g     F .text.itcm	0000008e FatPartition::allocateCluster(unsigned long, unsigned long*)
0003725c g     F .text.itcm	00000024 _wcsnrtombs_r
00031ca0 g     F .text.itcm	0000002c _write_r
20003060 g     O .data	00000008 typeinfo for __cxxabiv1::__forced_unwind
20038940 g     O .bss	00000014 patchCord213
0000b9a8 g     F .text.itcm	00000064 drawBrightness()
0002410c g     F .text.itcm	00000014 String::String(String const&)
00000178  w    F .text.itcm	00000004 CLEDController::endShowLeds(void*)
2003892c g     O .bss	00000014 patchCord212
0002f410 g     F .text.itcm	0000005a .hidden __floatdidf
00031908 g     F .text.itcm	00000060 memcmp
20038918 g     O .bss	00000014 patchCord211
20007bdc g     O .data	00000010 filterPageCount
00034e18 g     F .text.itcm	0000002c _read_r
20038904 g     O .bss	00000014 patchCord210
000279e4 g     F .text.itcm	0000000c .hidden __math_oflowf
20009e7c g     O .bss	000004d4 SD
00031ccc g     F .text.itcm	0000000c __errno
00023fc4 g     F .text.itcm	00000050 random()
00001518 g     F .text.itcm	0000001c staticButtonPushed(i2cEncoderLibV2*)
2003c956 g     O .bss	00000001 drawNoSD_hasRun
200082bc g     O .data	0000004c velocity
00000142  w    F .text.itcm	0000002e CLEDController::showLeds(unsigned char)
000347a4 g     F .text.itcm	00000154 __mdiff
0001d754 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00017150 g     F .text.itcm	000000c8 _spi_dma_rxISR0()
20037f74 g     O .bss	00000018 pan
2003787c g     O .bss	00000020 i2s1
2000b2bc g     O .bss	00000004 CLEDController::m_pHead
2003c950 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
200030a0 g     O .data	0000000c typeinfo for std::bad_exception
000351a8 g     F .text.itcm	00000cec _dtoa_r
200036c8 g     O .data	00000014 vtable for std::length_error
00030648 g     F .text.itcm	00000006 .hidden _Unwind_GetDataRelBase
0001dc64 g     F .text.itcm	00000104 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00021654 g     F .text.itcm	00000008 SdioCard::writeStop()
2000b3d0  w    O .bss	00000028 CFastLED::addLeds<(SWS2812)0, 17, (EOrder)129>(CRGB*, int, int)::controller
00008584 g     F .text.itcm	0000005c stopSound(int, int)
0002030a g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
00023664 g     F .text.itcm	00000048 HardwareSerialIMXRT::addToSerialEventsList()
20039160 g     O .bss	00000004 peakIndex
0001b4b0 g     F .text.itcm	0000000c BandLimitedWaveform::init_square(unsigned long)
00025332  w    F .text.itcm	00000004 abort
2000bda4 g     O .bss	00000004 errno
20007db0 g     O .data	0000004c menu
00016aec g     F .text.itcm	000000c8 CFastLED::showColor(CRGB const&, unsigned char)
00022fd4 g     F .text.itcm	0000001c AudioConnection::connect(AudioStream&, unsigned char, AudioStream&, unsigned char)
20038968 g     O .bss	00000014 patchCord215
20003b88  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
20008268 g     O .data	00000008 sndTypeNames
200034b4  w    O .data	00000024 vtable for FsFile
20038954 g     O .bss	00000014 patchCord214
00034760 g     F .text.itcm	00000042 __mcmp
000325c0 g     F .text.itcm	00001b44 _svfprintf_r
00016c70 g     F .text.itcm	00000054 CLEDController::CLEDController()
0001bfe2 g     F .text.itcm	0000002c ExFatFile::peek()
00000346  w    F .text.itcm	00000002 CWS2812SerialController<17, (EOrder)129>::init()
0000ff8c g     F .text.itcm	000003ec playNote()
00030bf0 g     F .text.itcm	00000018 realloc
00001038  w    F .text.itcm	00000078 AudioEffectEnvelope::AudioEffectEnvelope()
2000ad10 g     O .bss	00000038 SenvelopeFilter1_2
20038990 g     O .bss	00000014 patchCord217
000178c0 g     F .text.itcm	0000002a i2cEncoderLibV2::begin(unsigned short)
0001787c g     F .text.itcm	0000000a i2cEncoderLibV2::readCounterInt()
0001e420 g     F .text.itcm	00000010 FatFile::close()
2000361c g     O .data	0000002c vtable for __cxxabiv1::__class_type_info
000188f4 g     F .text.itcm	0000003c AudioFilterLadder::resonance(float)
000282a8 g     F .text.itcm	00000008 __cxa_get_globals_fast
2003897c g     O .bss	00000014 patchCord216
00025e00 g     F .text.itcm	0000009c usb_midi_flush_output
60002bbc g       .text.code	00000000 __init_array_end
00017bf0 g     F .text.itcm	000001ac AudioControlSGTL5000::enable(unsigned int, unsigned long)
00023a04 g     F .text.itcm	0000010c IntervalTimer::beginCycles(teensy::inplace_function<void (), 16u, 8u>, unsigned long)
00034d9c g     F .text.itcm	0000002c _fstat_r
0001da4a g     F .text.itcm	0000003a ExFatPartition::dirCache(DirPos_t*, unsigned char)
0001fc50 g     F .text.itcm	00000108 FatFile::getName8(char*, unsigned int)
0001af50 g     F .text.itcm	0000048a AudioSynthWaveformModulated::update()
00020b56 g     F .text.itcm	00000028 SharedSpiCard::readStop()
0001bd34 g     F .text.itcm	00000024 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
000233b0 g     F .text.itcm	0000006c HardwareSerialIMXRT::end()
000220c0 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
00009958 g     F .text.itcm	00000098 drawSliderName(unsigned char, unsigned char, char const*, CRGB)
0002f378 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0001db82 g     F .text.itcm	00000078 ExFatPartition::freeChain(unsigned long)
00028110 g     F .text.itcm	00000070 __gnu_end_cleanup
00016c6c g     F .text.itcm	00000002 CLEDController::~CLEDController()
200378dc g     O .bss	00000004 lastInteraction
20002ec0 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
2000b19c g     O .bss	00000004 FsDateTime::callback
00026b78 g     F .text.itcm	00000378 arm_fir_decimate_f32
00009f54 g     F .text.itcm	00000208 switchMode(Mode*)
00023cd0 g     F .text.itcm	00000174 Print::printFloat(double, unsigned char)
200073a4 g     O .data	00000004 IntervalTimer::nvic_priorites
0002f0fc g     F .text.itcm	0000027a .hidden __aeabi_dsub
000289e8 g     F .text.itcm	00000038 __cxa_throw
00034ee8 g     F .text.itcm	0000004c _wcrtomb_r
0000decc  w    F .text.itcm	000000b0 AudioPlayArrayResmp::AudioPlayArrayResmp()
00024610 g     F .text.itcm	0000007c pinMode
0000031e  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#4}::_FUN(void*)
000186b4 g     F .text.itcm	0000018c AudioEffectFreeverb::AudioEffectFreeverb()
00009168 g     F .text.itcm	00000134 drawAdditionalFeatures(int)
20038b84 g     O .bss	00000014 patchCord33
20003558 g     O .data	00000030 vtable for SDClass
2000b8d0 g     O .bss	00000020 amp8
2003c9a0 g       .bss	00000000 _ebss
000223ae g     F .text.itcm	0000009e FsUtf::cpToMb(unsigned long, char*, char*)
20038b48 g     O .bss	00000014 patchCord30
000320cc g     F .text.itcm	00000002 __retarget_lock_release_recursive
000301f8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXD
600023b4 g     F .text.code	00000002 startup_default_early_hook
20038ecc g     O .bss	00000014 patchCord71
000170e0  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20003288 g     O .data	0000000c vtable for AudioAnalyzePeak
20037f64 g     O .bss	00000004 oldMode
0001d864 g     F .text.itcm	00000064 ExFatFile::hashName(ExName_t*)
0002fb30 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Set
2000b890 g     O .bss	00000020 amp6
000018fc g     F .text.itcm	00000248 checkPendingSampleNotes()
20038ee0 g     O .bss	00000014 patchCord72
20038b5c g     O .bss	00000014 patchCord31
2000b294 g     O .bss	00000008 AudioOutputI2S::dma
00016c68  w    F .text.itcm	00000004 CLEDController::lanes()
2000b8b0 g     O .bss	00000020 amp7
0001ab22 g     F .text.itcm	0000002a BandLimitedWaveform::generate_sawtooth(unsigned long, int)
200083ac g     O .data	00000028 waveformsArray
20038620 g     O .bss	00000014 patchCord178
20038f30 g     O .bss	00000014 patchCord76
00004f58 g     F .text.itcm	00000138 generateParticles()
20038eb8 g     O .bss	00000014 patchCord70
20038260 g     O .bss	00000014 patchCord134
708330ac g     O .bss.extram	00000024 sample_len
2000b850 g     O .bss	00000020 amp4
00026b3c g     F .text.itcm	0000003a arm_fir_decimate_init_f32
20003250 g     O .data	00000038 vtable for CLEDController
000008b4  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
20038274 g     O .bss	00000014 patchCord135
2003860c g     O .bss	00000014 patchCord177
20007f00 g     O .data	0000004c noteShift
0001ce60 g     F .text.itcm	00000240 ExFatFile::write(void const*, unsigned int)
20038ef4 g     O .bss	00000014 patchCord73
0000532c g     F .text.itcm	000000d4 play(bool)
2000b870 g     O .bss	00000020 amp5
00005970 g     F .text.itcm	000000a8 updateFilterEncoderColors()
200385f8 g     O .bss	00000014 patchCord176
2003824c g     O .bss	00000014 patchCord132
20038b70 g     O .bss	00000014 patchCord32
20038f1c g     O .bss	00000014 patchCord75
20037edc g     O .bss	00000040 noteArray
20003b78  w    O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<void (&)(), void (*)(), void>(void (&)())::vt
2003a480 g     O .bss	00000010 previewCache
000107f8 g     F .text.itcm	00000a0c checkMode(int const*, bool)
200385e4 g     O .bss	00000014 patchCord175
20038594 g     O .bss	00000014 patchCord171
00034d70 g     F .text.itcm	00000008 _localeconv_r
0002f400 g     F .text.itcm	0000006a .hidden __floatundidf
200385a8 g     O .bss	00000014 patchCord172
20038f08 g     O .bss	00000014 patchCord74
00000ef8  w    F .text.itcm	00000038 AudioPlaySdWav::~AudioPlaySdWav()
0001f4c4 g     F .text.itcm	0000015c FatFile::remove()
00034f50 g     F .text.itcm	00000078 frexp
20038238 g     O .bss	00000014 patchCord131
6000183c g     F .text.code	00000048 TwoWire::configSDApin(unsigned char)
000266f8 g     F .text.itcm	00000444 arm_fir_interpolate_f32
200033f4 g     O .data	0000001c vtable for AudioControlSGTL5000
00028ac0 g     F .text.itcm	0000003a __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
20003470 g     O .data	0000000c vtable for AudioFilterStateVariable
200385d0 g     O .bss	00000014 patchCord174
20009ddc g     O .bss	000000a0 MIDI
200385bc g     O .bss	00000014 patchCord173
0000bb14 g     F .text.itcm	00000028 showExit(int)
20003074 g     O .data	00000008 typeinfo for __cxxabiv1::__foreign_exception
700014c4 g     O .bss.extram	00000190 Swaveform1_2
70001334 g     O .bss.extram	00000190 Swaveform1_1
20003410 g     O .data	0000000c vtable for AudioSynthNoiseWhite
700011a4 g     O .bss.extram	00000190 Swaveform1_0
2003c96e g     O .bss	00000001 tmpMute
2000b234 g     O .bss	00000004 AudioStream::unused
000197c0 g     F .text.itcm	0000013c AudioOutputI2S::isr()
20003220 g     O .data	0000000c vtable for AudioInputI2S
20038cc4 g     O .bss	00000014 patchCord48
00008290 g     F .text.itcm	000002f4 chiptune_synth(int, int, int, int, int, int, int)
20039164 g     O .bss	00000024 peakRec
000231dc g     F .text.itcm	00000054 EventResponder::runFromInterrupt()
0002fac0 g     F .text.itcm	00000012 .hidden __gnu_Unwind_Resume_or_Rethrow
20003094 g     O .data	0000000c typeinfo for std::length_error
20038c60 g     O .bss	00000014 patchCord43
2003c94d g     O .bss	00000001 AudioStream::update_scheduled
20038634 g     O .bss	00000014 patchCord179
2003829c g     O .bss	00000014 patchCord137
20039034 g     O .bss	00000014 patchCord88
2003c924 g     O .bss	00000002 AudioStream::memory_used_max
000181dc g     F .text.itcm	0000004c AudioEffectEnvelope::noteOn()
200382c4 g     O .bss	00000014 patchCord139
20038288 g     O .bss	00000014 patchCord136
00028f48 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00000280  w    F .text.itcm	0000001c AudioPlayArrayResmp::~AudioPlayArrayResmp()
200030c4 g     O .data	00000008 typeinfo for std::exception
00043c00 g       *ABS*	00000000 _flashimagelen
20038cd8 g     O .bss	00000014 patchCord49
00022152 g     F .text.itcm	00000018 SdSpiArduinoDriver::receive()
200382b0 g     O .bss	00000014 patchCord138
20007d7c g     O .data	00000004 marqueePos
20038cb0 g     O .bss	00000014 patchCord47
20008b10 g     O .bss	00000038 BDenv
20003088 g     O .data	0000000c typeinfo for std::logic_error
00016bdc g     F .text.itcm	0000002c CFastLED::setMaxRefreshRate(unsigned short, bool)
20009484 g     O .bss	00000010 FastLED
0000029c g     F .text.itcm	00000002 staticThresholds(i2cEncoderLibV2*)
0001a922 g     F .text.itcm	0000003a BandLimitedWaveform::process_active_steps_saw(unsigned long)
2000322c g     O .data	0000000c vtable for AudioAmplifier
0002402c g     F .text.itcm	00000016 random(long, long)
00022c14 g     F .text.itcm	00000010 lpi2c4_isr()
000281fc g     F .text.itcm	0000008a __cxa_end_catch
0001b3dc g     F .text.itcm	0000005c BandLimitedWaveform::init_sawtooth(unsigned long)
2003c94e g     O .bss	00000001 AudioInputI2S::update_responsibility
00030fe0 g     F .text.itcm	00000088 snprintf
000372b0 g     F .fini	00000000 _fini
00027d88 g     F .text.itcm	00000020 std::__throw_bad_alloc()
00009e44 g     F .text.itcm	00000110 initSliders(unsigned char, unsigned char)
00018228 g     F .text.itcm	00000020 AudioEffectEnvelope::noteOff()
00022758 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
0002341c g     F .text.itcm	0000003c nvic_execution_priority()
200081d0 g     O .data	0000004c set_Wav
00025088 g     F .text.itcm	00000038 quadtimer_init
00028288 g     F .text.itcm	00000002 std::exception::~exception()
000013a4  w    F .text.itcm	00000050 AudioSynthNoiseWhite::AudioSynthNoiseWhite()
00028f78 g     F .text.itcm	00000042 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00003d48 g     F .text.itcm	0000006c initFilterTransition(int)
00004698 g     F .text.itcm	00000124 setFilterDefaults(int)
200389a4 g     O .bss	00000014 patchCord218
00025bac g     F .text.itcm	00000020 usb_receive
0001e37c g     F .text.itcm	000000a4 FatFile::sync()
000302ac g     F .text.itcm	00000022 .hidden ___Unwind_Resume_or_Rethrow
0001b5e6  w    F .text.itcm	00000002 SDClass::~SDClass()
00020b0c  w    F .text.itcm	0000000c SharedSpiCard::readCSD(csd_t*)
0001b9e0 g     F .text.itcm	000000dc SDClass::begin(unsigned char)
2000b2d4 g     O .bss	00000008 AudioOutputTDM2::dma
200389b8 g     O .bss	00000014 patchCord219
2000810c g     O .data	00000004 previewVol
20007a18 g     O .data	00000018 attackAmp
2000335c g     O .data	0000000c vtable for AudioEffectEnvelope
200036f0 g     O .data	00000014 vtable for std::bad_function_call
20038580 g     O .bss	00000014 patchCord170
200030f4 g     O .data	00000022 typeinfo name for __cxxabiv1::__class_type_info
0000ad40 g     F .text.itcm	00000174 setVelocity()
70005f5c g     O .bss.extram	00000038 Senvelope2_2
00020874 g     F .text.itcm	00000096 SharedSpiCard::cardCommand(unsigned char, unsigned long)
70005f24 g     O .bss.extram	00000038 Senvelope2_1
0003018c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP
20002028 g     O .data	00000202 AudioWaveformSine
2000aca0 g     O .bss	00000038 SenvelopeFilter1_0
2000acd8 g     O .bss	00000038 SenvelopeFilter1_1
70005eec g     O .bss.extram	00000038 Senvelope2_0
0001c7e4 g     F .text.itcm	00000114 ExFatFile::syncDir()
000236ac g     F .text.itcm	00000290 HardwareSerialIMXRT::begin(unsigned long, unsigned short)
00021a58 g     F .text.itcm	000002c8 SdioCard::begin(SdioConfig)
600023b4  w    F .text.code	00000002 startup_early_hook
2000b830 g     O .bss	00000020 amp3
00009dac g     F .text.itcm	00000098 showFilterPages(unsigned char)
20007b3c g     O .data	0000003c envelopes
200035ac g     O .data	00000070 vtable for SdioCard
00000e6c  w    F .text.itcm	0000005a newdigate::ResamplingArrayReader::close()
00031ce8 g     F .text.itcm	000002dc strcmp
2000b810 g     O .bss	00000020 amp2
60002cc8  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
200079c8 g     O .data	00000004 __malloc_trim_threshold
2000b790 g     O .bss	00000020 amp1
0001fdce g     F .text.itcm	0000011e FatPartition::fatGet(unsigned long, unsigned long*)
00000362  w    F .text.itcm	00000014 std::vector<PendingNote, std::allocator<PendingNote> >::~vector()
2000b38c  w    O .bss	00000044 fl::Singleton<fl::EngineEvents, 0>::instance()::instance
000231ac g     F .text.itcm	00000030 DMAChannel::release()
00008da0 g     F .text.itcm	0000004c light(unsigned int, unsigned int, CRGB)
200031e4  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
20038c74 g     O .bss	00000014 patchCord44
20039048 g     O .bss	00000014 patchCord89
00025340 g     F .text.itcm	00000064 tempmonGetTemp
20038c88 g     O .bss	00000014 patchCord45
2000821c g     O .data	0000004c singleMode
00000376  w    F .text.itcm	000000f2 CWS2812SerialController<17, (EOrder)129>::showPixels(PixelController<(EOrder)129, 8, 255ul>&)
000027c4 g     F .text.itcm	00000038 savePageMutesToGlobal()
000014f8 g     F .text.itcm	00000020 encoder_button_pushed(i2cEncoderLibV2*, int)
00018028 g     F .text.itcm	000001b4 AudioEffectEnvelope::update()
00020b7e g     F .text.itcm	0000001e SharedSpiCard::syncDevice()
00034cc0 g     F .text.itcm	000000b0 __swbuf_r
200079d8 g     O .data	00000004 _impure_ptr
20038c9c g     O .bss	00000014 patchCord46
00000f30  w    F .text.itcm	00000038 File::~File()
00022914 g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
000372b4 g       .ARM.exidx	00000000 __exidx_start
0001a642 g     F .text.itcm	00000016 AudioRecordQueue::freeBuffer()
00016fca  w    F .text.itcm	0000000a fl::EngineEvents::~EngineEvents()
00017888 g     F .text.itcm	00000038 i2cEncoderLibV2::writeEncoder(unsigned char, unsigned char)
000370ec g     F .text.itcm	00000066 _fputwc_r
00021814 g     F .text.itcm	000000b0 SdioCard::writeSector(unsigned long, unsigned char const*)
2000b2f4 g     O .bss	00000008 AudioInputSPDIF3::dma
2002b244 g     O .bss	000062a0 freeverb7
0001fbb6 g     F .text.itcm	00000098 FatFile::getSFN(char*, unsigned int)
00001c48 g     F .text.itcm	00000240 shiftNotes()
20037864 g     O .bss	00000004 fxType
00000000 g       .text.itcm	00000000 _stext
00022ca4  w    F .text.itcm	0000000c AudioStream::update_all()
00022d1c g     F .text.itcm	000000b8 AudioStream::allocate()
0000ca4c g     F .text.itcm	00000170 drawLoadingBar(int, int, int, CRGB, CRGB, bool)
00024050 g     F .text.itcm	0000001c String::changeBuffer(unsigned int)
000027fc g     F .text.itcm	0000002c loadGlobalMutesToPage()
2000313c g     O .data	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00025c44  w    F .text.itcm	00000008 usb_serial_class::flush()
00031a60 g     F .text.itcm	000000a4 memset
2000c524 g     O .bss	000062a0 freeverb1
2003c926 g     O .bss	00000002 AudioStream::cpu_cycles_total
00027c40 g     F .text.itcm	00000028 .hidden __math_check_oflow
60001000 g     O .text.headers	00000020 ImageVectorTable
00009778 g     F .text.itcm	000000a8 drawFastRecMode()
20280000 g       .text.csf	00000000 _heap_end
00022dd4 g     F .text.itcm	00000050 AudioStream::release(audio_block_struct*)
200095b0 g     O .bss	00000020 HHnoise
00028290 g     F .text.itcm	00000008 std::bad_exception::what() const
00000ae8  w    F .text.itcm	0000001c SDFile::write(void const*, unsigned int)
0001d140 g     F .text.itcm	00000098 ExFatFormatter::writeUpcase(unsigned long)
70911500 g       .bss.extram	00000000 _extram_end
000005e4  w    F .text.itcm	0000000c Mode::~Mode()
20003188 g     O .data	00000012 typeinfo name for std::bad_exception
00025b0c g     F .text.itcm	00000048 usb_config_tx
200378b4 g     O .bss	00000024 lastFile
00017218 g     F .text.itcm	00000274 SPIClass::begin()
00028a90 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
20210400 g     O .bss.dma	00001400 particles
00024284 g     F .text.itcm	0000029c set_arm_clock
200314e4 g     O .bss	000062a0 freeverb8
2003c600 g     O .bss	00000190 waveform14_1
0000d838  w    F .text.itcm	000000a4 audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()
20007448 g     O .data	00000004 __brkval
70835314 g     O .bss.extram	00002244 tmp
200079dc g     O .data	0000003c amps
000056b8 g     F .text.itcm	00000058 handleNoteOff(unsigned char, unsigned char, unsigned char)
0001aa14 g     F .text.itcm	000000ce BandLimitedWaveform::new_step_check_pulse(unsigned long, unsigned long, int)
2003c978 g     O .bss	00000001 usb_high_speed
00023b10 g     F .text.itcm	00000074 IntervalTimer::end()
00028290 g     F .text.itcm	00000008 transaction clone for std::bad_exception::what() const
20007ae8 g     O .data	00000004 dir
600023ba g     F .text.code	00000004 startup_debug_reset
00020b24 g     F .text.itcm	00000032 SharedSpiCard::readStart(unsigned long)
0002f3bc g     F .text.itcm	00000042 .hidden __extendsfdf2
00025324  w    F .text.itcm	00000004 _isatty
2003c790 g     O .bss	00000190 waveform14_2
00000a02  w    F .text.itcm	0000001e SDFile::read(void*, unsigned int)
000179ac g     F .text.itcm	0000005c i2cEncoderLibV2::writeEncoder(unsigned char, long)
00025bcc g     F .text.itcm	00000004 usb_transfer_status
000322e4 g     F .text.itcm	000000a0 _malloc_trim_r
00025c24  w    F .text.itcm	00000008 usb_serial_class::clear()
0001e50c g     F .text.itcm	00000044 FatFile::dirEntry(DirFat_t*)
2000b1ac g     O .bss	00000008 ObjectFLED::dma2
00001b48 g     F .text.itcm	00000100 getNoteDuration(int)
000092f8 g     F .text.itcm	0000011c drawStatus()
00030658 g     F .text.itcm	00000010 malloc
00034670 g     F .text.itcm	000000f0 __lshift
0001e6e8 g     F .text.itcm	000000d2 FatFile::mkdir(FatFile*, char const*, bool)
70000e84 g     O .bss.extram	00000190 Swaveform3_1
00030194 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D
0000b310 g     F .text.itcm	000000cc drawTimer()
20006160 g     O .data	00000120 _impure_data
00030634 g     F .text.itcm	00000012 .hidden _Unwind_GetLanguageSpecificData
20006e8c g     O .data	00000060 Serial8
70000cf4 g     O .bss.extram	00000190 Swaveform3_0
00001214  w    F .text.itcm	00000064 AudioMixer4::AudioMixer4()
2000a350 g     O .bss	00000004 SMP_FAST_REC
200082a4  w    O .data	00000016 usb_string_serial_number
600023be g     F .text.code	00000112 configure_cache
00000320  w    F .text.itcm	00000026 std::_Function_handler<void (unsigned char, unsigned char, unsigned char, bool, bool), audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()::{lambda(unsigned char, unsigned char, unsigned char, bool, bool)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
000205a0  w    F .text.itcm	00000006 SdCardInterface::status()
70000000 g     O .bss.extram	00000b40 _samplers
000174f2 g     F .text.itcm	0000007e SPIClass::transfer(void const*, void*, unsigned int)
20003588 g     O .data	00000024 vtable for TwoWire
000026cc g     F .text.itcm	0000002c getMuteState(int)
00001278  w    F .text.itcm	00000064 AudioSynthWaveform::AudioSynthWaveform()
0000fd1c g     F .text.itcm	00000044 loadWav()
0002f0d8 g     F .text.itcm	0000001a __cxa_current_exception_type
00023e44 g     F .text.itcm	00000180 breakTime(unsigned long, DateTimeFields&)
00019220 g     F .text.itcm	000000d4 AudioInputI2S::isr()
00027ffc g     F .text.itcm	000000b0 __cxa_type_match
00034f34 g     F .text.itcm	00000016 _wcsrtombs_r
00027c08 g     F .text.itcm	0000001e .hidden __math_invalid
00025d40 g     F .text.itcm	000000c0 usb_midi_configure
20024fa4 g     O .bss	000062a0 freeverb2
00031968 g     F .text.itcm	000000f8 memmove
00028ba8 g     F .text.itcm	00000004 std::type_info::__is_function_p() const
000038b0 g     F .text.itcm	000001cc setDrums(DrumTypes, int)
0001da84 g     F .text.itcm	00000048 ExFatPartition::fatGet(unsigned long, unsigned long*)
20003434  w    O .data	0000003c vtable for CWS2812SerialController<17, (EOrder)129>
2003c922 g     O .bss	00000002 AudioStream::memory_used
0001a550 g     F .text.itcm	00000010 AudioPlaySdWav::isPlaying()
00023950  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#3}::_FUN(void*, void*)
0002393c g     F .text.itcm	00000010 IRQHandler_Serial8
00027e10 g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
0000abd0 g     F .text.itcm	000000ac filtercheck()
00024bfc g     F .text.itcm	00000008 operator new(unsigned int)
20037f4c g     O .bss	00000008 octave
20003bd8 g     O .data	00000060 .hidden __inv_pio4
00000774  w    F .text.itcm	0000003e StreamFile<FsBaseFile, unsigned long long>::read()
70001014 g     O .bss.extram	00000190 Swaveform3_2
70000000 g       .bss.extram	00000000 _extram_start
60043c00 g       .text.csf	00000000 __text_csf_end
2000b370 g     O .bss	00000004 FatVolume::m_cwv
0000b3ec g     F .text.itcm	0000040c checkEncoders()
00031b04 g     F .text.itcm	0000008a strncmp
2000b598 g     O .bss	00000001 __lock___malloc_recursive_mutex
00022ff0 g     F .text.itcm	000000a4 AudioConnection::disconnect()
000224f4 g     F .text.itcm	000000cc toUpcase(unsigned short)
0002fa04 g     F .text.itcm	00000066 .hidden __gnu_Unwind_RaiseException
2003bf08 g     O .bss	00000078 synths
0000b7f8 g     F .text.itcm	0000012c drawCursor()
0001cb4a g     F .text.itcm	000000bc ExFatFile::rename(ExFatFile*, char const*)
00007cc8 g     F .text.itcm	000002e4 bass_synth(int, int, int, int, int, int, int)
0000013c  w    F .text.itcm	00000004 Print::availableForWrite()
2000b1c0 g     O .bss	00000004 AudioStream::first_update
0000cebc g     F .text.itcm	00000114 showSamplePack()
20007aa4 g     O .data	00000018 decayAmp
70005fcc g     O .bss.extram	00000038 SmixerR4
0001a3a0 g     F .text.itcm	000001b0 AudioPlaySdWav::update()
00017a38 g     F .text.itcm	00000050 i2cEncoderLibV2::writeEncoder24bit(unsigned char, unsigned long)
000264d8 g     F .text.itcm	00000018 usb_serial_putchar
0000c718 g     F .text.itcm	000001d8 processPeaks()
000192f4 g     F .text.itcm	0000009c AudioInputI2S::update()
0003019c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D
00018840 g     F .text.itcm	00000060 AudioFilterLadder::initpoly()
2000b710 g     O .bss	00000080 activeNotes
0002fad4 g     F .text.itcm	00000002 .hidden _Unwind_Complete
00000f88  w    F .text.itcm	0000004c AudioStream::AudioStream(unsigned char, audio_block_struct**)
0001a804 g     F .text.itcm	00000080 BandLimitedWaveform::insert_step(int, bool, int)
00005090 g     F .text.itcm	000001a8 getPixelColor(unsigned char, unsigned char, unsigned long)
60002b38 g       .text.code	00000000 __preinit_array_end
00000468  w    F .text.itcm	00000014 CLEDController::clearLeds(int)
000221ec g     F .text.itcm	0000004e FsCache::sync()
000007b2  w    F .text.itcm	0000001a StreamFile<FsBaseFile, unsigned long long>::flush()
00022c24 g     F .text.itcm	00000080 TwoWire::setClock(unsigned long)
2003c953  w    O .bss	00000001 SDFile::name()::zeroterm
00031fbc g     F .text.itcm	000000ba strcpy
00017a94 g     F .text.itcm	0000003e AudioAnalyzePeak::update()
000245a0 g     F .text.itcm	0000004c digitalWrite
2000930c g     O .bss	00000038 BdFilterMix
0001765c g     F .text.itcm	00000196 i2cEncoderLibV2::updateStatus()
2003a420 g     O .bss	0000000c posString
0002fad8 g     F .text.itcm	0000000c .hidden _Unwind_DeleteException
000212c4 g     F .text.itcm	0000004c SdioCard::isBusy()
0001d0a0  w    F .text.itcm	00000020 Print::write(char const*)
00031bf4 g     F .text.itcm	00000062 _vasnprintf_r
2000953c g     O .bss	00000038 HHenv
0001e570 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
000232a2 g     F .text.itcm	00000070 HardwareSerialIMXRT::peek()
2000331c  w    O .data	00000028 vtable for usb_serial_class
00025c60  w    F .text.itcm	0000000a usb_serial_class::write(unsigned char)
20003068 g     O .data	0000000c typeinfo for __cxxabiv1::__class_type_info
0000034c  w    F .text.itcm	00000002 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, MidiSettings, midi::DefaultPlatform>::~MidiInterface()
2000b290 g     O .bss	00000004 AudioOutputI2S::block_right_2nd
00022ec4 g     F .text.itcm	0000001c AudioConnection::AudioConnection()
0001b6b2  w    F .text.itcm	0000005a SDClass::rmdir(char const*)
00020da8 g     F .text.itcm	0000002e SharedSpiCard::writeData(unsigned char const*)
70003144 g     O .bss.extram	00000b40 Sladder1_2
00028f3c g     F .text.itcm	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000005b4  w    F .text.itcm	00000014 CWS2812SerialController<17, (EOrder)129>::~CWS2812SerialController()
000205aa  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
2003bf88 g     O .bss	00000004 systick_safe_read
00020e5a  w    F .text.itcm	00000042 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
000021e0 g     F .text.itcm	00000078 updateLastPage()
200073a0 g     O .data	00000004 __cxxabiv1::__unexpected_handler
20037d14 g     O .bss	00000038 mixerPlay
00027c84 g     F .text.itcm	000000e4 scalbnf
2003c96b g     O .bss	00000001 shifted
0000047c  w    F .text.itcm	00000138 CPixelLEDController<(EOrder)129, 8, 255ul>::show(CRGB const*, int, unsigned char)
00020726  w    F .text.itcm	0000000a SharedSpiCard::end()
000205ba g     F .text.itcm	00000084 SharedSpiCard::sectorCount()
0002406c g     F .text.itcm	00000028 String::reserve(unsigned int)
00031c64 g     F .text.itcm	0000000c __cxa_atexit
00024120 g     F .text.itcm	00000022 String::operator=(char const*)
000169d0 g     F .text.itcm	00000048 CFastLED::countFPS(int)
000085e0 g     F .text.itcm	00000088 autoOffActiveNotes()
200389e0 g     O .bss	00000014 patchCord220
0001bd58 g     F .text.itcm	00000024 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
00025310  w    F .text.itcm	00000004 _read
00023094 g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
000210e8 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
60002c28  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
00025bd0 g     F .text.itcm	00000054 usb_init_serialnumber
00016fd4 g     F .text.itcm	00000038 fl::EngineEvents::getInstance()
00000025 g       *ABS*	00000000 _teensy_model_identifier
00007470 g     F .text.itcm	000002bc organ_synth(int, int, int, int, int, int, int)
00034104 g     F .text.itcm	000000d8 __smakebuf_r
0002eff4 g     F .text.itcm	000000e4 __cxa_call_unexpected
00019de0 g     F .text.itcm	00000158 AudioPlaySdWav::play(char const*)
00002828 g     F .text.itcm	00000018 BDnoteOn()
20006f10 g     O .data	0000000c Smixer2
2000307c g     O .data	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00020ee2  w    F .text.itcm	00000002 SdioCard::end()
00020bf2 g     F .text.itcm	0000006a DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
000342a0 g     F .text.itcm	00000012 _Bfree
200378e0 g     O .bss	00000004 lastTouchState
00000174  w    F .text.itcm	00000004 CLEDController::beginShowLeds(int)
000203b4 g     F .text.itcm	00000074 FsBaseFile::open(FsVolume*, char const*, int)
000320c4 g     F .text.itcm	00000002 __retarget_lock_close_recursive
0000e138  w    F .text.itcm	00000140 audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::noteEventCallback(unsigned char, unsigned char, unsigned char, bool, bool)
00022ee0 g     F .text.itcm	000000f4 AudioConnection::connect()
00030678 g     F .text.itcm	00000560 _malloc_r
00025608 g     F .text.itcm	00000028 usb_stop_sof_interrupts
0001babc  w    F .text.itcm	0000008e SdBase<FsVolume, FsFormatter>::restart()
0001d97a g     F .text.itcm	000000d0 ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
20008aa0 g     O .bss	00000038 BDMixer
20009964 g     O .bss	00000394 HHtone2
2003a440 g     O .bss	00000040 pressedKeyCount
00004f08 g     F .text.itcm	00000024 getFolderNumber(int)
00009414 g     F .text.itcm	00000088 drawChar(char, int, int, CRGB)
00024520 g     F .text.itcm	00000054 micros
0002531a  w    F .text.itcm	0000000a _fstat
20003488  w    O .data	0000002c vtable for File
200031d4 g     O .data	0000000d typeinfo name for std::type_info
00008b88 g     F .text.itcm	00000218 processAdjustments_new(unsigned char)
20038a94 g     O .bss	00000014 patchCord229
00027b3c g     F .text.itcm	00000006 __ieee754_sqrtf
200036b4 g     O .data	00000014 vtable for std::logic_error
0000aeb4 g     F .text.itcm	00000094 drawPages()
20038a08 g     O .bss	00000014 patchCord222
20000c38 g     O .data	00000028 __mprec_bigtens
00001e88 g     F .text.itcm	00000258 playSynth(int, int, int, bool)
00030c08 g     F .text.itcm	000003d8 _realloc_r
200389f4 g     O .bss	00000014 patchCord221
2003c957 g     O .bss	00000001 external_psram_size
0000a15c g     F .text.itcm	00000060 setSynthDefaultValues(int)
0001c780 g     F .text.itcm	00000062 ExFatFile::rmdir()
20038a30 g     O .bss	00000014 patchCord224
00031104 g     F .text.itcm	00000004 utoa
20006f04 g     O .data	0000000c Smixer1
2000b334 g     O .bss	00000008 AudioOutputI2SQuad::dma
20038a1c g     O .bss	00000014 patchCord223
0002165c g     F .text.itcm	0000006c SdioCard::writeStart(unsigned long)
2000b594 g     O .bss	00000001 __lock___atexit_recursive_mutex
00032590 g     F .text.itcm	0000002a __ascii_mbtowc
0002feac  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr1
2003c95f g     O .bss	00000001 lastPinsConnected
0001a980 g     F .text.itcm	00000094 BandLimitedWaveform::new_step_check_square(unsigned long, int)
0002feb4  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr2
00027e68 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
60002aa0 g     F .text.code	00000000 _init
00000e04  w    F .text.itcm	00000068 newdigate::ResamplingArrayReader::~ResamplingArrayReader()
00021178  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00021318 g     F .text.itcm	000000d0 SdioCard::erase(unsigned long, unsigned long)
0000b3dc g     F .text.itcm	00000010 mapXtoPageOffset(int)
000175b8 g     F .text.itcm	00000036 i2cEncoderLibV2::i2cEncoderLibV2(unsigned char)
000279cc g     F .text.itcm	0000000c .hidden __math_uflowf
0000e298  w    F .text.itcm	0000026c midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, MidiSettings, midi::DefaultPlatform>::launchCallback()
20009d30 g     O .bss	00000038 HHtoneMix
2000b2e4 g     O .bss	00000008 AudioInputI2SHex::dma
60001884 g     F .text.code	00000058 TwoWire::setSDA(unsigned char)
2003c92c g     O .bss	00000002 AudioInputI2S::block_offset
70001ac4 g     O .bss.extram	00000b40 Sladder1_0
2000baa0 g     O .bss	00000010 buttons
0002fea4 g     F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr0
00027ae4 g     F .text.itcm	00000056 ldexpf
00025c34  w    F .text.itcm	00000008 usb_serial_class::read()
70002604 g     O .bss.extram	00000b40 Sladder1_1
200082a4 g     O .data	00000016 usb_string_serial_number_default
0002f378 g     F .text.itcm	0000001e .hidden __floatunsidf
00031c58 g     F .text.itcm	0000000c __locale_mb_cur_max
20037c68 g     O .bss	00000004 mRecsecs
0001be4c g     F .text.itcm	00000196 ExFatFile::read(void*, unsigned int)
00027a78 g     F .text.itcm	0000006c modff
2000b33c g     O .bss	00000008 AudioOutputPT8211_2::dma
000032d4 g     F .text.itcm	000005dc HH_drum(float, float, float, int)
0002f3bc g     F .text.itcm	00000042 .hidden __aeabi_f2d
200083d6 g     O .data	00000001 SMP_LOAD_SETTINGS
20038c4c g     O .bss	00000014 patchCord42
2003c944 g     O .bss	00000001 SMP_PATTERN_MODE
2003a1a8 g     O .bss	00000274 playSdWav1
0001e09c g     F .text.itcm	00000044 FatFile::readDirCache(bool)
2003a490 g     O .bss	00000004 pulseCount
00027210 g     F .text.itcm	0000057c pow
0000086e  w    F .text.itcm	00000046 SDFile::truncate(unsigned long long)
00020ad6 g     F .text.itcm	00000036 SharedSpiCard::readRegister(unsigned char, void*)
00028aa4 g     F .text.itcm	0000001c __cxxabiv1::__si_class_type_info::~__si_class_type_info()
20003374  w    O .data	00000014 vtable for AudioPlayArrayResmp
00000a60  w    F .text.itcm	00000040 SDFile::~SDFile()
0001dd68 g     F .text.itcm	00000018 ExFatPartition::rootLength()
20038fbc g     O .bss	00000014 patchCord82
200032a0 g     O .data	0000000c vtable for CrashReportClass
20038f94 g     O .bss	00000014 patchCord80
0000cd6c g     F .text.itcm	00000150 showLoadSave()
0001b5a0  w    F .text.itcm	00000046 SDClass::totalSize()
20038fd0 g     O .bss	00000014 patchCord83
20211c00 g     O .bss.dma	00000275 usb_descriptor_buffer
20038c24 g     O .bss	00000014 patchCord40
0001c8f8 g     F .text.itcm	0000005c ExFatFile::sync()
0001748c g     F .text.itcm	0000002e SPIClass::usingInterrupt(IRQ_NUMBER_t)
00022e80 g     F .text.itcm	00000042 AudioStream::receiveWritable(unsigned int)
2003851c g     O .bss	00000014 patchCord166
00007730 g     F .text.itcm	000002c0 flute_synth(int, int, int, int, int, int, int)
20038184 g     O .bss	00000014 patchCord121
20038fa8 g     O .bss	00000014 patchCord81
00027bc8 g     F .text.itcm	00000010 .hidden __math_oflow
000279f0 g     F .text.itcm	00000024 .hidden __math_divzerof
20039020 g     O .bss	00000014 patchCord87
20038508 g     O .bss	00000014 patchCord165
2003913c g     O .bss	00000024 peak1
20038170 g     O .bss	00000014 patchCord120
20007cb8 g     O .data	0000003c freeverbs
20038fe4 g     O .bss	00000014 patchCord84
0003183c g     F .text.itcm	000000cc __swsetup_r
0001e590 g     F .text.itcm	00000158 FatFile::mkdir(FatFile*, FatLfn_t*)
200384f4 g     O .bss	00000014 patchCord164
20038c38 g     O .bss	00000014 patchCord41
0002115c g     F .text.itcm	0000001c SdioCard::type() const
2000b2c0 g     O .bss	00000004 CLEDController::m_pTail
200384a4 g     O .bss	00000014 patchCord160
2003c920 g     O .bss	00000002 AudioUsingSPICount
00021f6c g     F .text.itcm	0000001a SdioCard::syncDevice()
2003900c g     O .bss	00000014 patchCord86
200384e0 g     O .bss	00000014 patchCord163
20003674  w    O .data	00000020 vtable for newdigate::ResamplingReader<short, File>
00023258  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
2000b284 g     O .bss	00000004 AudioOutputI2S::block_left_1st
00025328  w    F .text.itcm	00000006 _lseek
20038ff8 g     O .bss	00000014 patchCord85
00006c20 g     F .text.itcm	000002b4 lead_synth(int, int, int, int, int, int, int)
00031770 g     F .text.itcm	000000aa _fwrite_r
2003918c g     O .bss	00000800 peakRecValues
200384cc g     O .bss	00000014 patchCord162
0001daf4 g     F .text.itcm	0000004e ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00015f80 g     F .text.itcm	00000328 setup
200031b4 g     O .data	0000000d typeinfo name for std::bad_alloc
200384b8 g     O .bss	00000014 patchCord161
2003c965 g     O .bss	00000001 previewIsPlaying
0001eb2c g     F .text.itcm	000001b0 FatFile::write(void const*, unsigned int)
0001e9bc g     F .text.itcm	000000fc FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
60001020 g     O .text.headers	0000000c BootData
0001b4bc g     F .text.itcm	00000014 BandLimitedWaveform::BandLimitedWaveform()
00028908 g     F .text.itcm	00000008 __cxxabiv1::__unexpected(void (*)())
2003bf80 g     O .bss	00000004 systick_cycle_count
000342b4 g     F .text.itcm	000000a4 __multadd
00025b54 g     F .text.itcm	00000030 usb_prepare_transfer
000305fc g     F .text.itcm	0000002a .hidden __gnu_unwind_frame
20039124 g     O .bss	00000014 patchCord99
20038d8c g     O .bss	00000014 patchCord57
200381ac g     O .bss	00000014 patchCord123
20038544 g     O .bss	00000014 patchCord168
0001e1de g     F .text.itcm	000000da FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
20038198 g     O .bss	00000014 patchCord122
20038530 g     O .bss	00000014 patchCord167
200381d4 g     O .bss	00000014 patchCord125
20038d28 g     O .bss	00000014 patchCord52
200381c0 g     O .bss	00000014 patchCord124
200390d4 g     O .bss	00000014 patchCord95
000103d8 g     F .text.itcm	0000014c checkMidi()
000375d0 g       .text.itcm	00000000 _etext
00034d78 g     F .text.itcm	00000024 _close_r
20038da0 g     O .bss	00000014 patchCord58
20038558 g     O .bss	00000014 patchCord169
20002eb0  w    O .data	00000010 teensy::inplace_function_detail::empty_vtable<void>
20038db4 g     O .bss	00000014 patchCord59
000164b0 g     F .text.itcm	000004e8 WS2812Serial::show()
20038d78 g     O .bss	00000014 patchCord56
00000318  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
2000ba9c g     O .bss	00000004 buttonState
2000b7d0 g     O .bss	00000020 amp13
0000f8c8 g     F .text.itcm	00000398 loadSample(unsigned int, unsigned int)
2000b7f0 g     O .bss	00000020 amp14
0001bbc8 g     F .text.itcm	000000a4 SDClass::mediaPresent()
00004dac g     F .text.itcm	0000004c clearPage()
00017070 g     F .text.itcm	00000032 fl::EngineEvents::_onEndFrame()
00023c10 g     F .text.itcm	0000001c Print::printf(char const*, ...)
708330d0 g     O .bss.extram	00002244 original
20008a68 g     O .bss	00000038 BDMix
0002048c g     F .text.itcm	000000ec FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
00034fc8 g     F .text.itcm	00000040 __assert_func
00005d38 g     F .text.itcm	00000c24 updateVals(int)
600018dc g     F .text.code	00000048 TwoWire::configSCLpin(unsigned char)
00024c24 g     F .text.itcm	00000064 ultoa
0001fab8 g     F .text.itcm	000000d4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
2003998c g     O .bss	00000800 peakValues
2000b27c g     O .bss	00000008 AudioInputTDM2::dma
0002064a g     F .text.itcm	00000012 DedicatedSpiCard::setDedicatedSpi(bool)
2000b344 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
000226ea  w    F .text.itcm	0000000c TwoWire::available()
00023238 g     F .text.itcm	00000020 systick_isr
2000adc4  w    O .bss	00000004 guard variable for CFastLED::addLeds<(SWS2812)0, 17, (EOrder)129>(CRGB*, int, int)::controller
000280ac g     F .text.itcm	00000064 __cxa_begin_cleanup
20038a44 g     O .bss	00000014 patchCord225
6000290c g     F .text.code	000000ec usb_init
00000da4  w    F .text.itcm	00000060 newdigate::ResamplingArrayReader::~ResamplingArrayReader()
00019f38 g     F .text.itcm	00000078 AudioPlaySdWav::parse_format()
20038a58 g     O .bss	00000014 patchCord226
00027a14 g     F .text.itcm	0000001e .hidden __math_invalidf
20007a30 g     O .data	00000018 attackFilter
0000dc78  w    F .text.itcm	00000254 newdigate::ResamplingReader<short, File>::initializeInterpolationPoints()
00016dfe g     F .text.itcm	00000068 CRGB::computeAdjustment(unsigned char, CRGB const&, CRGB const&)
20038a6c g     O .bss	00000014 patchCord227
2003782c g     O .bss	00000038 freeverbmixer8
200377f4 g     O .bss	00000038 freeverbmixer7
20038a80 g     O .bss	00000014 patchCord228
20006df8 g     O .data	00000004 SMP_REC_CHANNEL_CLEAR
60002d54 g     O .text.progmem	00000275 usb_config_descriptor_12
200390e8 g     O .bss	00000014 patchCord96
20009da4 g     O .bss	00000038 HhFilterMix
0001d0c0 g     F .text.itcm	0000002c ExFatFormatter::syncUpcase()
2003c97a g     O .bss	00000001 waitForFourBars
00005250 g     F .text.itcm	000000dc resetMidiClockState()
000095e8 g     F .text.itcm	000000f8 drawPreviewVol()
200378e4 g     O .bss	00000004 lastUpdate
20000000 g       .data	00000000 _sdata
0000c264 g     F .text.itcm	00000194 showMenu()
200390fc g     O .bss	00000014 patchCord97
2000ac78 g     O .bss	00000028 Sdc1_2
00021df0 g     F .text.itcm	0000006c SdioCard::readStart(unsigned long)
20039110 g     O .bss	00000014 patchCord98
00020b9c g     F .text.itcm	00000056 DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000ba0c g     F .text.itcm	00000108 showIcons(IconType, CRGB)
00008e98 g     F .text.itcm	000002cc drawVerticalSlider(unsigned char, unsigned char, unsigned char, unsigned char, CRGB, bool, unsigned char, unsigned char, bool)
2000739c g     O .data	00000004 __cxxabiv1::__terminate_handler
2003bf84 g     O .bss	00000004 systick_millis_count
000302f4 g     F .text.itcm	00000022 .hidden ___Unwind_Backtrace
2000ac50 g     O .bss	00000028 Sdc1_1
00020ed6  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
00019fb0 g     F .text.itcm	000003f0 AudioPlaySdWav::consume(unsigned long)
aaaabfff g       *ABS*	00000000 _flexram_bank_config
60001b8c g     F .text.code	000007b4 CrashReportClass::printTo(Print&) const
00019020 g     F .text.itcm	000000e4 AudioFilterStateVariable::update_variable(short const*, short const*, short*, short*, short*)
00024574 g     F .text.itcm	0000002c delay
20007444 g     O .data	00000004 __atexit_recursive_mutex
0003225c g     F .text.itcm	00000088 __register_exitproc
00032384 g     F .text.itcm	0000020c _free_r
20008400 g     O .data	000002c0 _VectorsRam
20038d3c g     O .bss	00000014 patchCord53
000288e4 g     F .text.itcm	00000010 __cxxabiv1::__terminate(void (*)())
00017570 g     F .text.itcm	00000048 SPIClass::end()
00024200 g     F .text.itcm	00000036 String::compareTo(String const&) const
00017f34 g     F .text.itcm	000000f4 AudioEffectBitcrusher::update()
2000ac28 g     O .bss	00000028 Sdc1_0
20038d50 g     O .bss	00000014 patchCord54
0002272e g     F .text.itcm	0000002a TwoWire::write(unsigned char)
00020ede  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
000265dc g     F .text.itcm	0000002c smalloc_verify_pool
20038d64 g     O .bss	00000014 patchCord55
200378a0 g     O .bss	00000004 lastChangeTime
00017af0  w    F .text.itcm	00000004 AudioControlSGTL5000::disable()
0002063e g     F .text.itcm	0000000c DedicatedSpiCard::readSector(unsigned long, unsigned char*)
200060d4 g     O .data	0000006c usb_descriptor_list
00020dd6 g     F .text.itcm	00000048 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
2000b8f0 g     O .bss	00000018 audioInput
2000c054 g     O .bss	00000258 filterMixerTransitions
0001ab76 g     F .text.itcm	00000034 BandLimitedWaveform::generate_pulse(unsigned long, unsigned long, int)
000240f8 g     F .text.itcm	00000014 String::operator=(String const&)
000255d4 g     F .text.itcm	00000034 usb_start_sof_interrupts
00019d0c g     F .text.itcm	0000002c AudioPlaySdWav::begin()
0000d810 g     F .text.itcm	00000028 drawKnobColorDefault()
2000b928 g     O .bss	00000004 beatStartTime
20008308 g     O .data	00000004 voiceSelect
00003a7c g     F .text.itcm	0000017c setDrumDefaults(bool)
00027e60 g     F .text.itcm	00000008 std::bad_alloc::what() const
20008138 g     O .data	00000004 recMode
20000000 g     O .data	00000280 endpoint_queue_head
2003a18c g     O .bss	0000000c pendingSampleNotes
0000b928 g     F .text.itcm	00000080 drawVolume(unsigned int)
0000a918 g     F .text.itcm	000000cc resetAllToDefaults()
2000b1b4 g     O .bss	00000008 ObjectFLED::dma3
20009574 g     O .bss	0000003c HHfilt
00022794 g     F .text.itcm	0000014c TwoWire::force_clock()
00016e66 g     F .text.itcm	00000164 hsv2rgb_rainbow(CHSV const&, CRGB&)
00009bac g     F .text.itcm	00000200 slider(unsigned char)
00028fd8 g     F .text.itcm	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00022cb0 g     F .text.itcm	0000006c software_isr()
2000b7b0 g     O .bss	00000020 amp11
2000b324 g     O .bss	00000008 AudioOutputSPDIF2::dma
0001a7b4 g     F .text.itcm	00000050 BandLimitedWaveform::lookup(int)
2000b32c g     O .bss	00000008 AudioOutputSPDIF3::dma
2003c96a g     O .bss	00000001 sampleIsLoaded
2003c958 g     O .bss	00000001 fastRecordActive
00018f8c g     F .text.itcm	00000094 AudioFilterStateVariable::update_fixed(short const*, short*, short*, short*)
000016e4 g     F .text.itcm	00000110 checkCrashReport()
000264f0 g     F .text.itcm	0000004c usb_serial_write_buffer_free
00026160 g     F .text.itcm	000000dc usb_serial_read
00028f5c g     F .text.itcm	0000001c __cxxabiv1::__class_type_info::~__class_type_info()
2003c964 g     O .bss	00000001 pendingStartOnBar
00021088 g     F .text.itcm	0000000c SdioCard::errorCode() const
0001de62 g     F .text.itcm	0000003c FatFile::openRoot(FatVolume*)
2000b5cc g     O .bss	00000004 __malloc_max_total_mem
00030654  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
2000b2dc g     O .bss	00000008 AudioInputAnalog::dma
20003428 g     O .data	0000000c vtable for AudioEffectBitcrusher
00005668 g     F .text.itcm	00000050 onBeatTick()
2003a910 g     O .bss	00000004 serialMIDI
7083979c g     O .bss.extram	00000028 lastPreviewedSample
2000b274 g     O .bss	00000008 AudioInputPDM2::dma
200079cc g     O .data	0000000c __sglue
00034e44 g     F .text.itcm	000000a4 fcvtbuf
00024042 g     F .text.itcm	0000000e String::~String()
2000305c g     O .data	00000001 std::nothrow
00028ce8 g     F .text.itcm	00000040 std::logic_error::~logic_error()
000026f8 g     F .text.itcm	0000003c setMuteState(int, bool)
200381e8 g     O .bss	00000014 patchCord126
20003cd8 g     O .data	00000101 _ctype_
00034a94 g     F .text.itcm	00000130 __sflush_r
0001f3e8 g     F .text.itcm	000000dc FatFile::parsePathName(char const*, FatLfn_t*, char const**)
00017986 g     F .text.itcm	0000000c i2cEncoderLibV2::writeAntibouncingPeriod(unsigned char)
200381fc g     O .bss	00000014 patchCord128
2000812c g     O .data	00000004 rateFactor
20003174 g     O .data	00000011 typeinfo name for std::length_error
00021310 g     F .text.itcm	00000008 SdioCard::status()
0001e0e0 g     F .text.itcm	000000a4 FatFile::seekSet(unsigned long)
0002f46c g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
000216c8  w    F .text.itcm	0000000e SdioCard::~SdioCard()
20038210 g     O .bss	00000014 patchCord129
000116e8 g     F .text.itcm	00000444 showWave()
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
600023b6  w    F .text.code	00000002 startup_middle_hook
00003e80 g     F .text.itcm	00000818 setFilters(FilterType, int, bool)
0001f7b4 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000eae0  w    F .text.itcm	000000c0 void std::vector<PendingNote, std::allocator<PendingNote> >::_M_realloc_insert<PendingNote>(__gnu_cxx::__normal_iterator<PendingNote*, std::vector<PendingNote, std::allocator<PendingNote> > >, PendingNote&&)
2000b2c4 g     O .bss	00000004 EventResponder::lastInterrupt
20008780 g     O .bss	00000020 endpoint0_transfer_data
00000348  w    F .text.itcm	00000004 CPixelLEDController<(EOrder)129, 8, 255ul>::lanes()
000312bc g     F .text.itcm	0000000c __sfp_lock_release
20037784 g     O .bss	00000038 freeverbmixer1
00000264  w    F .text.itcm	00000004 newdigate::ResamplingArrayReader::createSourceBuffer()
0002f0f4 g     F .text.itcm	00000000 .hidden __aeabi_drsub
00028d28 g     F .text.itcm	00000040 std::length_error::~length_error()
200377bc g     O .bss	00000038 freeverbmixer2
00002328 g     F .text.itcm	000000f8 toggleCopyPaste()
2003c97b g     O .bss	00000001 yield_active_check_flags
20007efc g     O .data	00000004 micGain
00002680 g     F .text.itcm	0000004c initPageMutes()
0002828c g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
2000abf0 g     O .bss	00000038 SNtoneMix
00028afc g     F .text.itcm	0000007a __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0003181c g     F .text.itcm	00000020 fwrite
60002764 g     F .text.code	00000060 usb_pll_start
000012dc  w    F .text.itcm	00000084 AudioSynthWaveformModulated::AudioSynthWaveformModulated()
20037ed8 g     O .bss	00000004 msecs
0001a5ba g     F .text.itcm	0000004e AudioRecordQueue::clear()
00028450 g     F .text.itcm	00000494 __gxx_personality_v0
00002870 g     F .text.itcm	00000490 KD_drum(float, float, float, int)
000246f0 g     F .text.itcm	0000004c eeprom_initialize
00005710 g     F .text.itcm	00000080 scaleToDisplay(SliderDefEntry const&, unsigned char)
2003c959 g     O .bss	00000001 filterDrawActive
2000bf24 g     O .bss	0000003c filter4
00000192  w    F .text.itcm	00000012 File::available()
20037e9c g     O .bss	00000038 mixersynth_end
000013a4  w    F .text.itcm	00000050 AudioSynthNoiseWhite::AudioSynthNoiseWhite()
2000bf9c g     O .bss	0000003c filter6
0000d26c g     F .text.itcm	000000b0 pause()
0001b82c  w    F .text.itcm	000000ac SDClass::open(char const*, unsigned char)
0001e7ba g     F .text.itcm	00000202 FatFile::rename(FatFile*, char const*)
00031274 g     F .text.itcm	0000003c __sinit
20006e4c g     O .data	0000000c Sdc1
2000beac g     O .bss	0000003c filter2
0001c00e g     F .text.itcm	000000e4 ExFatFile::seekSet(unsigned long long)
20000c60 g     O .data	000000c8 __mprec_tens
00000f68 g     F .text.itcm	00000020 staticButtonReleased(i2cEncoderLibV2*)
0000bf24 g     F .text.itcm	00000240 drawMainSettingStatus(int)
2000bee8 g     O .bss	0000003c filter3
0001c5c4 g     F .text.itcm	00000030 ExFatFile::openNext(ExFatFile*, int)
000302ac g     F .text.itcm	00000022 .hidden _Unwind_Resume_or_Rethrow
0001a884 g     F .text.itcm	00000038 BandLimitedWaveform::process_step(int)
000313cc g     F .text.itcm	0000004a _vdprintf_r
2003bfc0 g     O .bss	00000190 waveform11_1
2000bfd8 g     O .bss	0000003c filter7
20008104 g     O .data	00000008 playTimer
0000d610 g     F .text.itcm	0000000a autoLoad()
000228e0 g     F .text.itcm	00000034 TwoWire::wait_idle()
2003c150 g     O .bss	00000190 waveform11_2
2000c014 g     O .bss	0000003c filter8
00008afc g     F .text.itcm	0000008c loadSMPSettings()
2003c95e g     O .bss	00000001 isRecording
2000813c g     O .data	00000018 releaseAmp
200075bc g     O .data	00000408 __malloc_av_
00027d74 g     F .text.itcm	00000014 operator new[](unsigned int, std::nothrow_t const&)
20037d4c g     O .bss	00000038 mixer_end
00025010 g     F .text.itcm	00000078 flexpwm_init
2000bf60 g     O .bss	0000003c filter5
60002d50 g     O .text.progmem	00000004 string0
2000c2bc g     O .bss	00000038 filtermixer1
20009cf8 g     O .bss	00000038 HHtoneEnv
00028ba4 g     F .text.itcm	00000002 std::type_info::~type_info()
2000c39c g     O .bss	00000038 filtermixer2
00023396 g     F .text.itcm	00000018 HardwareSerialIMXRT::flush()
20001e98 g     O .data	000000e0 .hidden __sincosf_table
0000ee34 g     F .text.itcm	000009d4 initSamples()
00030654  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
20007a48 g     O .data	00000004 beat
0002327c g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
00037040 g     F .text.itcm	000000aa __fputwc
20007b90 g     O .data	0000004c filterMode
2000c3d4 g     O .bss	00000038 filtermixer3
0000a448 g     F .text.itcm	00000074 setEnvelopeDefaultValues(int)
00000230  w    F .text.itcm	0000001a SDFile::size()
0000034e  w    F .text.itcm	00000014 std::vector<PendingNoteEvent, std::allocator<PendingNoteEvent> >::~vector()
00002858 g     F .text.itcm	00000018 HHnoteOn()
200031c4 g     O .data	0000000d typeinfo name for std::exception
00000be4  w    F .text.itcm	00000100 CPixelLEDController<(EOrder)129, 8, 255ul>::showColor(CRGB const&, int, unsigned char)
70000b40 g     O .bss.extram	00000024 SampleRate
20007abc g     O .data	00000018 decayFilter
2000b25c g     O .bss	00000008 AudioInputPDM::dma
00017e2a g     F .text.itcm	00000054 AudioControlSGTL5000::volumeInteger(unsigned int)
20003238 g     O .data	0000000c vtable for AudioOutputI2S
600024d0 g     F .text.code	00000294 configure_external_ram
2000b5d0 g     O .bss	00000004 __malloc_top_pad
2000bdbc g     O .bss	0000003c filter1
0000decc  w    F .text.itcm	000000b0 AudioPlayArrayResmp::AudioPlayArrayResmp()
0002febc g     F .text.itcm	000002ae .hidden _Unwind_VRS_Pop
00031b90 g     F .text.itcm	00000064 strncpy
2000c4ec g     O .bss	00000038 filtermixer8
2000c364 g     O .bss	00000038 filtermixer14
00020766 g     F .text.itcm	00000028 SharedSpiCard::spiStop()
2000b26c g     O .bss	00000008 AudioInputI2S2::dma
00000f88  w    F .text.itcm	0000004c AudioStream::AudioStream(unsigned char, audio_block_struct**)
20008288 g     O .data	00000018 sustainFilter
00027e10 g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
2000b70c g     O .bss	00000004 __stdio_exit_handler
20008760 g     O .bss	00000020 endpoint0_transfer_ack
0001e2b8 g     F .text.itcm	000000c4 FatFile::openNext(FatFile*, int)
000226d0 g     F .text.itcm	0000001a mapf(double, double, double, double, double)
000301ac g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
0000025c  w    F .text.itcm	00000008 newdigate::ResamplingArrayReader::getSourceBufferValue(long)
00003cc0 g     F .text.itcm	00000088 setMixerGainSmooth(int, int, float, int)
00002560 g     F .text.itcm	00000120 setSliderDefForChannel(int)
0001de40 g     F .text.itcm	00000022 FatFile::cacheDirEntry(unsigned char)
00018a48 g     F .text.itcm	00000044 AudioFilterLadder::resonating()
00025c54  w    F .text.itcm	0000000c usb_serial_class::write(unsigned char const*, unsigned int)
2003c943 g     O .bss	00000001 SMP_FLOW_MODE
20039138 g     O .bss	00000004 patternChangeTime
20008f78 g     O .bss	00000394 BDsine
2003c92a g     O .bss	00000002 AudioStream::memory_pool_first_mask
00020e9c  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
2003c976 g     O .bss	00000001 usb_cdc_line_rtsdtr
0000e940  w    F .text.itcm	000001a0 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, MidiSettings, midi::DefaultPlatform>::thruFilter(unsigned char)
000241d8 g     F .text.itcm	0000000c String::append(String const&)
2000c2f4 g     O .bss	00000038 filtermixer11
00028df8 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
2000b908 g     O .bss	00000020 audioInputAmp
000320c0 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20007b38 g     O .data	00000004 editpage
2003c932 g     O .bss	00000002 AudioSynthNoiseWhite::instance_count
00016c6c g     F .text.itcm	00000002 CLEDController::~CLEDController()
000240d4 g     F .text.itcm	00000024 String::String(char const*)
20037ed4 g     O .bss	00000004 monitorLevel
20003368 g     O .data	0000000c vtable for AudioEffectFreeverb
20038224 g     O .bss	00000014 patchCord13
20008ad8 g     O .bss	00000038 BDchaosMix
000001a4  w    F .text.itcm	00000014 File::peek()
2003a800 g     O .bss	00000004 recWriteIndex
20037f2c g     O .bss	00000008 notePlaying
2000830c g     O .data	00000024 voices
0002473c g     F .text.itcm	0000007c eeprom_read_byte
00027c68 g     F .text.itcm	0000001a finitef
00019574 g     F .text.itcm	00000000 memcpy_tointerleaveLR
600027c4 g     F .text.code	00000148 tempmon_init
70001654 g     O .bss.extram	00000190 Swaveform2_0
200036dc g     O .data	00000014 vtable for std::bad_exception
2000a354 g     O .bss	00000038 SNMix
20037fa4 g     O .bss	00000014 patchCord10
2003c960 g     O .bss	00000001 nofile
2003815c g     O .bss	00000014 patchCord12
0002514c g     F .text.itcm	00000194 unused_interrupt_vector
0001b8d8  w    F .text.itcm	00000108 SDClass::usedSize()
00025128 g     F .text.itcm	00000024 rtc_get
200062d0 g     O .data	00000b28 SMP
2000b5a0 g     O .bss	00000028 __malloc_current_mallinfo
2000a490 g     O .bss	00000394 SNtone
2000c2ac g     O .bss	00000010 filterPage
0000024a  w    F .text.itcm	00000012 SDFile::isOpen()
0002090c g     F .text.itcm	00000190 SharedSpiCard::begin(SdSpiConfig)
20038490 g     O .bss	00000014 patchCord16
200095d0 g     O .bss	00000394 HHtone
2000b5d4 g     O .bss	00000138 __sf
20038080 g     O .bss	00000014 patchCord11
0001b4d0 g     F .text.itcm	000000d0 AudioSynthNoiseWhite::update()
00023c2c g     F .text.itcm	0000008a Print::printNumber(unsigned long, unsigned char, unsigned char)
00004f2c g     F .text.itcm	0000002c getFileNumber(int)
200382d8 g     O .bss	00000014 patchCord14
0001eec4 g     F .text.itcm	00000178 FatFile::makeSFN(FatLfn_t*)
00005400 g     F .text.itcm	00000268 myClock(unsigned long)
000198fc g     F .text.itcm	000000a0 AudioOutputI2S::update()
0001de9e g     F .text.itcm	0000002c FatFile::openCluster(FatFile*)
2000b264 g     O .bss	00000008 AudioInputTDM::dma
0000029e  w    F .text.itcm	0000006c StreamFile<FsBaseFile, unsigned long long>::available()
2000b404 g     O .bss	00000190 __atexit0
0000a3b4 g     F .text.itcm	00000094 setFiltersDefaultValues(int)
00026284 g     F .text.itcm	00000018 usb_serial_available
00000ef8  w    F .text.itcm	00000038 AudioPlaySdWav::~AudioPlaySdWav()
0000ccd4 g     F .text.itcm	00000098 drawNoSD()
00020844 g     F .text.itcm	00000030 SharedSpiCard::waitReady(unsigned short)
000301a4 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
000375d4 g       .ARM.exidx	00000000 __exidx_end
2003bfa0 g     O .bss	00000004 usb_timer0_callback
00023952  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#4}::_FUN(void*)
00001600 g     F .text.itcm	00000032 match_buttons(int const*, int, int, int, int)
20003208 g     O .data	0000000c vtable for AudioMixer4
00022e24 g     F .text.itcm	00000044 AudioStream::transmit(audio_block_struct*, unsigned char)
2000a824 g     O .bss	00000394 SNtone2
2003c952  w    O .bss	00000001 PixelController<(EOrder)129, 8, 255ul>::init_binary_dithering()::R
0001a5a4 g     F .text.itcm	00000016 AudioRecordQueue::available()
2000816c g     O .data	00000018 resonance
2000c32c g     O .bss	00000038 filtermixer13
700017e4 g     O .bss.extram	00000190 Swaveform2_1
000010b0  w    F .text.itcm	0000007c AudioFilterStateVariable::AudioFilterStateVariable()
200383b4 g     O .bss	00000014 patchCord15
00027d68 g     F .text.itcm	0000000a __aeabi_atexit
2000a38c g     O .bss	00000038 SNMixer
0000071a  w    F .text.itcm	0000003c SDFile::rewindDirectory()
00020eda  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
200003c8 g     O .data	00000870 .hidden __exp_data
200030b8 g     O .data	0000000c typeinfo for std::bad_alloc
000098f8 g     F .text.itcm	00000060 drawMidiTransport()
00028d28 g     F .text.itcm	00000040 std::length_error::~length_error()
00000280  w    F .text.itcm	0000001c AudioPlayArrayResmp::~AudioPlayArrayResmp()
2000341c g     O .data	0000000c vtable for AudioSynthWaveformDc
00002420 g     F .text.itcm	0000004c findSliderDefPageSlot(int, SettingArray, signed char, int&, int&)
0001e074 g     F .text.itcm	00000028 FatFile::peek()
2003c934 g     O .bss	00000002 dma_channel_allocated_mask
0000b07c g     F .text.itcm	000000f0 drawTriggers()
2000bac8 g     O .bss	00000004 currentEncoderIndex
2000319c g     O .data	00000016 typeinfo name for std::bad_function_call
70000b64 g     O .bss.extram	00000190 Swaveform2_2
0001699a g     F .text.itcm	00000014 CFastLED::CFastLED()
0001ca14 g     F .text.itcm	0000004a ExFatFile::mkdir(ExFatFile*, ExName_t*)
00001534 g     F .text.itcm	000000cc handle_button_state(i2cEncoderLibV2*, int)
2000b250 g     O .bss	00000004 AudioInputI2S::block_right
0001896c g     F .text.itcm	000000cc AudioFilterLadder::compute_coeffs(float)
20216280 g       .bss.dma	00000000 _heap_start
00000a60  w    F .text.itcm	00000040 SDFile::~SDFile()
00031728 g     F .text.itcm	00000046 _fwalk_sglue
0001f75a g     F .text.itcm	0000005a FatFormatter::writeMbr()
0001e4fa g     F .text.itcm	00000012 FatFile::open(FatVolume*, char const*, int)
60002d18  w    O .text.progmem	0000001e usb_string_product_name
2000b2fc g     O .bss	00000008 AudioOutputSPDIF::dma
00020724  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00019104 g     F .text.itcm	000000fe AudioFilterStateVariable::update()
20006e70 g     O .data	0000000c SenvelopeFilter1
00025c3c  w    F .text.itcm	00000008 usb_serial_class::available()
00006ed8 g     F .text.itcm	000002dc keys_synth(int, int, int, int, int, int, int)
0000213c g     F .text.itcm	00000070 updateVolume()
00008a70 g     F .text.itcm	0000008c updateSynthVoice(int)
0003132c g     F .text.itcm	00000086 _fputs_r
2003856c g     O .bss	00000014 patchCord17
20006e58 g     O .data	0000000c Senvelope1
20038648 g     O .bss	00000014 patchCord18
000348f8 g     F .text.itcm	000000d4 __d2b
00001360  w    F .text.itcm	00000044 AudioSynthWaveformDc::AudioSynthWaveformDc()
20038724 g     O .bss	00000014 patchCord19
00000fd4  w    F .text.itcm	00000064 AudioAnalyzePeak::AudioAnalyzePeak()
2000c050 g     O .bss	00000004 filterDrawEndTime
00000216  w    F .text.itcm	0000001a SDFile::position()
00021f86 g     F .text.itcm	0000000a sdCsInit(unsigned char)
20007dfc g     O .data	00000100 menuPages
000017f4 g     F .text.itcm	000000d8 initEncoders()
0001ecdc g     F .text.itcm	000000c0 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
2003bf9c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000030a  w    F .text.itcm	00000008 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#1}::_FUN(void*)
0001d0ec g     F .text.itcm	0000003a ExFatFormatter::writeUpcaseByte(unsigned char)
00021094 g     F .text.itcm	0000000c SdioCard::errorData() const
00000ec8  w    F .text.itcm	00000030 File::~File()
000058e0 g     F .text.itcm	00000090 printSliderDefTarget(unsigned char, unsigned char)
000302d0 g     F .text.itcm	00000022 .hidden _Unwind_ForcedUnwind
20008100 g     O .data	00000004 playNoteInterval
20006288 g     O .data	00000004 F_CPU_ACTUAL
00000b04  w    F .text.itcm	0000001c StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
20037f68 g     O .bss	0000000c oldPosString
000079f0 g     F .text.itcm	000002d8 wow_synth(int, int, int, int, int, int, int)
60002d38 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
2000744c g     O .data	00000000 .hidden __dso_handle
000343f8 g     F .text.itcm	0000005c __i2b
00025314  w    F .text.itcm	00000006 _close
000312b0 g     F .text.itcm	0000000c __sfp_lock_acquire
20038d00 g     O .bss	00000014 patchCord50
0001999c g     F .text.itcm	000000e0 AudioOutputI2S::config_i2s(bool)
200378e8 g     O .bss	00000300 leds
00017ea8 g     F .text.itcm	00000068 AudioControlSGTL5000::micGain(unsigned int)
20039070 g     O .bss	00000014 patchCord90
00007fb0 g     F .text.itcm	000002e0 brass_synth(int, int, int, int, int, int, int)
20038d14 g     O .bss	00000014 patchCord51
00016cc4 g     F .text.itcm	00000022 CLEDController::clearLedDataInternal(int)
000099f0 g     F .text.itcm	00000118 drawCornerValueCustom(unsigned char, unsigned char, SliderDefEntry const&)
200390c0 g     O .bss	00000014 patchCord94
20038094 g     O .bss	00000014 patchCord110
20038454 g     O .bss	00000014 patchCord157
0001fd58 g     F .text.itcm	00000008 FatFile::getName(char*, unsigned int)
00002840 g     F .text.itcm	00000018 SNnoteOn()
200387ec g     O .bss	00000014 patchCord199
000001b8  w    F .text.itcm	00000010 File::flush()
20038440 g     O .bss	00000014 patchCord156
000250c0 g     F .text.itcm	00000068 pwm_init
0000f808  w    F .text.itcm	000000c0 void std::vector<audiosample*, std::allocator<audiosample*> >::_M_realloc_insert<audiosample* const&>(__gnu_cxx::__normal_iterator<audiosample**, std::vector<audiosample*, std::allocator<audiosample*> > >, audiosample* const&)
20039084 g     O .bss	00000014 patchCord91
2003842c g     O .bss	00000014 patchCord155
00031068 g     F .text.itcm	0000009c __utoa
000282b0 g     F .text.itcm	00000008 __cxa_get_globals
200387d8 g     O .bss	00000014 patchCord198
000279d8 g     F .text.itcm	0000000c .hidden __math_may_uflowf
20038418 g     O .bss	00000014 patchCord154
200079c4 g     O .data	00000004 __malloc_sbrk_base
200387c4 g     O .bss	00000014 patchCord197
200383dc g     O .bss	00000014 patchCord151
0000e504  w    F .text.itcm	0000043a midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, MidiSettings, midi::DefaultPlatform>::parse()
200390ac g     O .bss	00000014 patchCord93
20038788 g     O .bss	00000014 patchCord194
20039098 g     O .bss	00000014 patchCord92
00034c3c g     F .text.itcm	0000003e __swrite
2003bf8c g     O .bss	00000004 touchState
200383c8 g     O .bss	00000014 patchCord150
00001634 g     F .text.itcm	000000b0 initSoundChip()
20038774 g     O .bss	00000014 patchCord193
20038404 g     O .bss	00000014 patchCord153
2003c975 g     O .bss	00000001 unpaintMode
600029f8 g     F .text.code	00000054 _reboot_Teensyduino_
00016fca  w    F .text.itcm	0000000a fl::EngineEvents::~EngineEvents()
200383f0 g     O .bss	00000014 patchCord152
20006e64 g     O .data	0000000c Senvelope2
200083d4 g     O .data	00000001 MIDI_CLOCK_SEND
20038df0 g     O .bss	00000014 patchCord61
200387b0 g     O .bss	00000014 patchCord196
0000a1c0 g     F .text.itcm	000001f4 setNewFilters()
000349cc g     F .text.itcm	000000c6 _fclose_r
20007c28 g     O .data	0000003c filters
60001924 g     F .text.code	0000005c TwoWire::setSCL(unsigned char)
00012800  w    F .text.itcm	000002b0 AudioPlayResmp<newdigate::ResamplingArrayReader>::update()
2003879c g     O .bss	00000014 patchCord195
00012000  w    F .text.itcm	00000800 newdigate::ResamplingReader<short, File>::readNextValue(short*, unsigned short)
200033c4 g     O .data	00000030 vtable for HardwareSerialIMXRT
00035ebc g     F .text.itcm	00000100 __ssprint_r
2000b2a4 g     O .bss	00000010 AudioOutputPWM::dma
00010378 g     F .text.itcm	00000060 handleStart()
0001a608 g     F .text.itcm	0000003a AudioRecordQueue::readBuffer()
20038e54 g     O .bss	00000014 patchCord66
0001b438 g     F .text.itcm	00000078 BandLimitedWaveform::init_pulse(unsigned long, unsigned long)
2003bfa4 g     O .bss	00000004 usb_timer1_callback
0001975e g     F .text.itcm	00000060 AudioAmplifier::update()
20038148 g     O .bss	00000014 patchCord119
0001bce8 g     F .text.itcm	00000038 ExFatFile::dirCache(unsigned char, unsigned char)
2000c47c g     O .bss	00000038 filtermixer6
2003847c g     O .bss	00000014 patchCord159
200380bc g     O .bss	00000014 patchCord112
0002030a g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
00009598 g     F .text.itcm	00000050 drawMidiVoiceSelect()
0000da34 g     F .text.itcm	000001d0 paint()
00018930 g     F .text.itcm	0000003c AudioFilterLadder::octaveControl(float)
2000c4b4 g     O .bss	00000038 filtermixer7
00017e02 g     F .text.itcm	00000028 AudioControlSGTL5000::modify(unsigned int, unsigned int, unsigned int)
2000b238 g     O .bss	00000004 ExFatVolume::m_cwv
20038468 g     O .bss	00000014 patchCord158
00016c08 g     F .text.itcm	00000050 CFastLED::addLeds(CLEDController*, CRGB*, int, int)
200380e4 g     O .bss	00000014 patchCord114
200380a8 g     O .bss	00000014 patchCord111
0002325c g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
2000c40c g     O .bss	00000038 filtermixer4
00034254 g     F .text.itcm	0000004c _Balloc
2000bcfc g     O .bss	00000038 envelope6
200380d0 g     O .bss	00000014 patchCord113
20038e68 g     O .bss	00000014 patchCord67
2000c444 g     O .bss	00000038 filtermixer5
00021e5c g     F .text.itcm	000000b0 SdioCard::readSector(unsigned long, unsigned char*)
0002065c g     F .text.itcm	0000005c DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00005a18 g     F .text.itcm	00000138 setDefaultFilterFromSlider(unsigned char, unsigned char)
2000b364 g     O .bss	00000008 AsyncAudioInputSPDIF3::dma
20038e7c g     O .bss	00000014 patchCord68
2000bd6c g     O .bss	00000038 envelope8
2000b24c g     O .bss	00000004 AudioInputI2S::block_left
2003c94f g     O .bss	00000001 AudioOutputI2S::update_responsibility
0002410c g     F .text.itcm	00000014 String::String(String const&)
60002b38 g       .text.code	00000000 __preinit_array_start
20038e40 g     O .bss	00000014 patchCord65
00024236 g     F .text.itcm	0000001a String::equals(String const&) const
0001a95c g     F .text.itcm	00000024 BandLimitedWaveform::process_active_steps_pulse(unsigned long, unsigned long)
20008270 g     O .data	00000018 sustainAmp
00017f10 g     F .text.itcm	00000022 AudioControlSGTL5000::lineOutLevel(unsigned char)
000210a0 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
2000b5c8 g     O .bss	00000004 __malloc_max_sbrked_mem
2003be20 g     O .bss	00000040 startTime
000210c4 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)
0001f8d0 g     F .text.itcm	000001e8 FatFormatter::makeFat32()
2000b36c g     O .bss	00000004 FsVolume::m_cwv
20007f4c g     O .data	000001b0 notesArray
00027a34 g     F .text.itcm	00000044 sqrtf
2003c470 g     O .bss	00000190 waveform13_2
20008114 g     O .data	00000018 pulseWidth
0002532e  w    F .text.itcm	00000004 __cxa_pure_virtual
00022bf4 g     F .text.itcm	00000010 lpi2c1_isr()
000222b8 g     F .text.itcm	0000004c FsName::get16()
2003c2e0 g     O .bss	00000190 waveform13_1
000013f4 g     F .text.itcm	00000084 getLogoPixelColor(unsigned char, unsigned char, float)
20003294 g     O .data	0000000c vtable for AudioRecordQueue
0000ed74  w    F .text.itcm	000000c0 void std::vector<audiovoice<AudioPlayArrayResmp>*, std::allocator<audiovoice<AudioPlayArrayResmp>*> >::_M_realloc_insert<audiovoice<AudioPlayArrayResmp>* const&>(__gnu_cxx::__normal_iterator<audiovoice<AudioPlayArrayResmp>**, std::vector<audiovoice<AudioPlayArrayResmp>*, std::allocator<audiovoice<AudioPlayArrayResmp>*> > >, audiovoice<AudioPlayArrayResmp>* const&)
0001d7a0 g     F .text.itcm	000000c4 ExFatFile::getName8(char*, unsigned int)
00001214  w    F .text.itcm	00000064 AudioMixer4::AudioMixer4()
00028e8c  w    F .text.itcm	00000078 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
60043000 g     O .text.csf	00000c00 hab_csf
20007d6c g     O .data	00000010 longPressDuration
00022a14 g     F .text.itcm	00000130 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00009820 g     F .text.itcm	00000060 drawPatternMode()
000175ee g     F .text.itcm	0000000a i2cEncoderLibV2::eventCaller(void (**)(i2cEncoderLibV2*))
000186b4 g     F .text.itcm	0000018c AudioEffectFreeverb::AudioEffectFreeverb()
600017e4 g     F .text.code	00000058 set_audioClock(int, long, unsigned long, bool)
20039188 g     O .bss	00000004 peakRecIndex
2000347c g     O .data	0000000c vtable for AudioSynthWaveformModulated
00000268  w    F .text.itcm	00000018 newdigate::ResamplingArrayReader::open(char*)
000170e0  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20006e7c g     O .data	00000010 Serial
20037df4 g     O .bss	00000038 mixer_waveform11
0002eed4 g     F .text.itcm	000000c4 __cxa_demangle
2000b288 g     O .bss	00000004 AudioOutputI2S::block_left_2nd
20037e64 g     O .bss	00000038 mixer_waveform14
20009d68 g     O .bss	0000003c HhFilter
00030264 g     F .text.itcm	00000022 .hidden _Unwind_RaiseException
00022714  w    F .text.itcm	00000018 TwoWire::peek()
0000d260 g     F .text.itcm	0000000a autoSave()
00034c7c g     F .text.itcm	00000020 __sseek
20037e2c g     O .bss	00000038 mixer_waveform13
20038760 g     O .bss	00000014 patchCord192
00035e94 g     F .text.itcm	00000028 fiprintf
20003694  w    O .data	00000020 vtable for newdigate::ResamplingArrayReader
2003874c g     O .bss	00000014 patchCord191
60002c78  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
70005e44 g     O .bss.extram	00000038 Senvelope1_0
200086c0 g       .bss	00000000 _sbss
000341dc g     F .text.itcm	00000076 _putc_r
2003c930 g     O .bss	00000002 AudioOutputI2S::block_right_offset
00023bf8  w    F .text.itcm	00000018 _write
20038738 g     O .bss	00000014 patchCord190
000201c8 g     F .text.itcm	00000142 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
00023230 g     F .text.itcm	00000008 pendablesrvreq_isr
0001f650 g     F .text.itcm	000000b0 FatFormatter::initFatDir(unsigned char, unsigned long)
20038e90 g     O .bss	00000014 patchCord69
00024166 g     F .text.itcm	00000072 String::append(char const*, unsigned int)
2000b374  w    O .bss	00000010 std::string::_Rep::_S_empty_rep_storage
00017a20 g     F .text.itcm	0000000c i2cEncoderLibV2::writeMin(long)
0001fd98 g     F .text.itcm	00000036 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
0001b5e8 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
00023312 g     F .text.itcm	00000084 HardwareSerialIMXRT::read()
00002258 g     F .text.itcm	000000d0 checkPages()
20037c6c g     O .bss	00000038 mixer0
0001b76a  w    F .text.itcm	00000070 SDClass::rename(char const*, char const*)
20038e04 g     O .bss	00000014 patchCord62
0002223a g     F .text.itcm	00000050 FsCache::prepare(unsigned long, unsigned char)
0001799e g     F .text.itcm	0000000c i2cEncoderLibV2::writeFadeRGB(unsigned char)
2000b400 g     O .bss	00000004 __atexit
000301b4 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXD
20038e18 g     O .bss	00000014 patchCord63
600019c4 g     F .text.code	000000cc AudioStream::initialize_memory(audio_block_struct*, unsigned int)
20007d1c g     O .data	00000004 lastPage
000220e8 g     F .text.itcm	00000060 SdSpiArduinoDriver::deactivate()
20038e2c g     O .bss	00000014 patchCord64
000177f4 g     F .text.itcm	00000088 i2cEncoderLibV2::readEncoderInt(unsigned char)
20008330 g     O .data	00000018 volume
00024c14 g     F .text.itcm	00000008 operator delete[](void*)
00028df8 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
20003704 g     O .data	00000014 vtable for std::bad_alloc
60002d38  w    O .text.progmem	00000018 usb_string_manufacturer_name
0001e184 g     F .text.itcm	0000005a FatFile::rmdir()
200378a4 g     O .bss	00000010 lastEncoderChange
00017a88 g     F .text.itcm	0000000c i2cEncoderLibV2::writeRGBCode(unsigned long)
20038cec g     O .bss	00000014 patchCord5
0000fe58 g     F .text.itcm	00000134 checkFastRec()
20038dc8 g     O .bss	00000014 patchCord6
00027f78 g     F .text.itcm	0000002e __cxa_allocate_exception
000302f4 g     F .text.itcm	00000022 .hidden _Unwind_Backtrace
00031434 g     F .text.itcm	000002f4 __sfvwrite_r
00025336 g     F .text.itcm	00000008 Panic_Temp_isr
0000d838  w    F .text.itcm	000000a4 audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()
2000b254 g     O .bss	00000008 AudioInputI2S::dma
00027bd8 g     F .text.itcm	00000030 .hidden __math_divzero
70005f94 g     O .bss.extram	00000038 SmixerL4
60001980 g     F .text.code	00000044 TwoWire::begin()
0000d6c8 g     F .text.itcm	000000c0 updateBPM()
0001bda4 g     F .text.itcm	000000a8 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
20037ca4 g     O .bss	00000038 mixer1
20038f80 g     O .bss	00000014 patchCord8
2003bfa8 g     O .bss	00000018 voiceStartTime
20037cdc g     O .bss	00000038 mixer2
2000be70 g     O .bss	0000003c filter14
20038ea4 g     O .bss	00000014 patchCord7
200083d5 g     O .data	00000001 MIDI_TRANSPORT_RECEIVE
00023bdc g     F .text.itcm	0000001c Print::println()
2000b92c g     O .bss	00000020 bitcrusher1
000210f8 g     F .text.itcm	00000064 SdioCard::sectorCount()
2000be34 g     O .bss	0000003c filter13
00020428 g     F .text.itcm	00000060 FsBaseFile::openNext(FsBaseFile*, int)
2003905c g     O .bss	00000014 patchCord9
0000d354 g     F .text.itcm	000002bc loadPattern(bool)
000047bc g     F .text.itcm	000000e4 writeWavHeader(File&, unsigned long, unsigned char, unsigned short)
000240d4 g     F .text.itcm	00000024 String::String(char const*)
000162a8 g     F .text.itcm	00000208 WS2812Serial::begin()
2003a7fc g     O .bss	00000004 recTime
0001fb8c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
2000bdf8 g     O .bss	0000003c filter11
0001c6d0 g     F .text.itcm	000000b0 ExFatFile::remove()
0003023c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXC
0000cbbc g     F .text.itcm	000000e0 EEPROMsetLastFile()
0001dd80 g     F .text.itcm	0000003a FatFile::addCluster()
000222a0 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
0001b5e6  w    F .text.itcm	00000002 SDClass::~SDClass()
00026608 g     F .text.itcm	00000044 sm_align_pool
70003c84 g     O .bss.extram	00000b40 Sladder2_0
20038c10 g     O .bss	00000014 patchCord4
200380f8 g     O .bss	00000014 patchCord115
20037f1c g     O .bss	00000010 noteOnTriggered
000205b2  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
00036034 g     F .text.itcm	00000f8c _vfiprintf_r
2003810c g     O .bss	00000014 patchCord116
20038b34 g     O .bss	00000014 patchCord3
0002653c g     F .text.itcm	000000a0 usb_serial_flush_output
00030628 g     F .text.itcm	0000000a .hidden _Unwind_GetRegionStart
2000ba0c g     O .bss	00000020 bitcrusher5
20008184 g     O .data	0000004c set_SamplePack
00020b18  w    F .text.itcm	0000000c SharedSpiCard::readCID(CID*)
20038120 g     O .bss	00000014 patchCord117
2000b9cc g     O .bss	00000020 bitcrusher3
00031418 g     F .text.itcm	0000001c vdprintf
0001cc06 g     F .text.itcm	00000174 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
0001a560 g     F .text.itcm	00000044 AudioRecordQueue::update()
2000bdb8 g     O .bss	00000004 fastRecMode
20038134 g     O .bss	00000014 patchCord118
2000b9ec g     O .bss	00000020 bitcrusher4
0001ddbc g     F .text.itcm	00000084 FatFile::addDirCluster()
000312c8 g     F .text.itcm	00000064 fputc
200030cc g     O .data	00000008 typeinfo for std::type_info
00025b84 g     F .text.itcm	00000028 usb_transmit
2000b9ac g     O .bss	00000020 bitcrusher2
70005eb4 g     O .bss.extram	00000038 Senvelope1_2
600023b8  w    F .text.code	00000002 startup_late_hook
000302d0 g     F .text.itcm	00000022 .hidden ___Unwind_ForcedUnwind
00008930 g     F .text.itcm	00000140 switchSynthVoice(int, int, int, int, int, int, int, int)
00020488 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
70005e7c g     O .bss.extram	00000038 Senvelope1_1
2000bad4 g     O .bss	00000020 defaultFastFilter
00022b44 g     F .text.itcm	000000ae TwoWire::isr()
2000ba2c g     O .bss	00000020 bitcrusher6
200032ac g     O .data	00000070 vtable for DedicatedSpiCard
00017af8 g     F .text.itcm	00000098 AudioControlSGTL5000::read(unsigned int)
00017d9c g     F .text.itcm	00000010 AudioControlSGTL5000::enable()
00016dc6 g     F .text.itcm	00000038 blend(CRGB const&, CRGB const&, unsigned char)
00021448 g     F .text.itcm	00000094 SdioCard::writeData(unsigned char const*)
0001fd60 g     F .text.itcm	00000038 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
2000ba6c g     O .bss	00000020 bitcrusher8
000207cc g     F .text.itcm	0000006c SharedSpiCard::readData(unsigned char*, unsigned int)
0000fd60 g     F .text.itcm	000000f8 stopFastRecord()
00034ca4 g     F .text.itcm	0000001a __ascii_wctomb
200083dd g     O .data	00000001 lastChangedEncoder
00000848  w    F .text.itcm	00000026 SDFile::close()
00027b44 g     F .text.itcm	00000038 __fpclassifyf
00009880 g     F .text.itcm	00000078 drawFlowMode()
000005e4  w    F .text.itcm	0000000c Mode::~Mode()
0001c0f4 g     F .text.itcm	000003d8 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
2003c977 g     O .bss	00000001 usb_configuration
20006dfc g     O .data	00000050 SPI
2000ba4c g     O .bss	00000020 bitcrusher7
2000bacc g     O .bss	00000004 currentMenuPage
00025ac8 g     F .text.itcm	00000044 usb_config_rx
0001827c g     F .text.itcm	00000438 AudioEffectFreeverb::update()
00019d38 g     F .text.itcm	000000a8 AudioPlaySdWav::stop()
0001bd7c g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
2003bf94 g     O .bss	00000008 usb_cdc_line_coding
00017dac  w    F .text.itcm	00000056 AudioControlSGTL5000::inputSelect(int)
00024c0c g     F .text.itcm	00000008 operator delete(void*)
00005b50 g     F .text.itcm	000001e4 setParams(ParameterType, int)
20008be4 g     O .bss	00000394 BDsaw
000005f0  w    F .text.itcm	00000056 SDFile::setModifyTime(DateTimeFields const&)
0002f398 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00006960 g     F .text.itcm	000002bc arp_synth(int, int, int, int, int, int, int)
000230c8 g     F .text.itcm	0000003c AudioStream::update_setup()
0003064e g     F .text.itcm	00000006 .hidden _Unwind_GetTextRelBase
00027e7c g     F .text.itcm	0000001c std::bad_alloc::~bad_alloc()
00000b76  w    F .text.itcm	0000006c SDFile::available()
2000b59c g     O .bss	00000001 __lock___sfp_recursive_mutex
2003c961 g     O .bss	00000001 paintMode
000205ae  w    F .text.itcm	00000004 SharedSpiCard::type() const
20003534  w    O .data	00000024 vtable for Stream
0002219e g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
0000d788 g     F .text.itcm	00000088 setVolume()
000288f4 g     F .text.itcm	00000014 std::terminate()
2003bd94 g     O .bss	0000001c sound4
0000a6f0 g     F .text.itcm	00000228 loadMenuFromEEPROM()
0000cc9c g     F .text.itcm	00000038 EEPROMgetLastFiles()
00024c04 g     F .text.itcm	00000008 operator new[](unsigned int)
00004adc g     F .text.itcm	000002d0 drawRandoms()
2003bd24 g     O .bss	0000001c sound0
2003bd78 g     O .bss	0000001c sound3
2000b2cc g     O .bss	00000008 AudioOutputI2S2::dma
000200ec g     F .text.itcm	000000dc FatPartition::freeClusterCount()
20009344 g     O .bss	00000140 Encoder
00023bb0 g     F .text.itcm	0000002c Print::write(unsigned char const*, unsigned int)
20006280 g     O .data	00000004 CrashReport
000225c0 g     F .text.itcm	00000110 fastinterpolate(short, short, short, short, float)
700047c4 g     O .bss.extram	00000b40 Sladder2_1
20006f34 g     O .data	0000000c Swaveform3
0000d31c g     F .text.itcm	00000038 handleStop()
0001a8bc g     F .text.itcm	00000066 BandLimitedWaveform::process_active_steps(unsigned long)
20008110 g     O .data	00000004 pulse
00017af4  w    F .text.itcm	00000004 AudioControlSGTL5000::inputLevel(float)
2003a42c g     O .bss	00000010 pressDuration
200062cc g     O .data	00000004 RefreshTime
20008b84 g     O .bss	00000028 BDpitchAmt
000247b8 g     F .text.itcm	000000e8 eepromemu_flash_write
0001128c g     F .text.itcm	0000045c previewSample(unsigned int, unsigned int, bool, bool)
0001db42 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
0002394c  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#1}::_FUN(void*)
00034c9c g     F .text.itcm	00000008 __sclose
00000646  w    F .text.itcm	0000006a SDFile::getModifyTime(DateTimeFields&)
000226f6  w    F .text.itcm	0000001e TwoWire::read()
70005304 g     O .bss.extram	00000b40 Sladder2_2
20037f90 g     O .bss	00000014 patchCord1
0001eab8 g     F .text.itcm	00000074 FatFile::truncate()
200062c8 g     O .data	00000004 PrevSampleRate
00028a90 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
20038800 g     O .bss	00000014 patchCord2
20003388  w    O .data	0000003c vtable for CPixelLEDController<(EOrder)129, 8, 255ul>
20007aec g     O .data	0000004c draw
00030264 g     F .text.itcm	00000022 .hidden ___Unwind_RaiseException
000007cc  w    F .text.itcm	00000032 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0002623c g     F .text.itcm	00000048 usb_serial_peekchar
2000b94c g     O .bss	00000020 bitcrusher11
200083de g     O .data	00000001 ledBrightness
000008b4  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
20006ef8 g     O .data	0000000c Sladder2
000096e0 g     F .text.itcm	00000098 drawMonitorLevel()
0001703e g     F .text.itcm	00000032 fl::EngineEvents::_onEndShowLeds()
00017992 g     F .text.itcm	0000000c i2cEncoderLibV2::writeDoublePushPeriod(unsigned char)
00022ec4 g     F .text.itcm	0000001c AudioConnection::AudioConnection()
20006eec g     O .data	0000000c Sladder1
00028180 g     F .text.itcm	0000007c __cxa_begin_catch
2003c95b g     O .bss	00000001 freshPaint
20038abc g     O .bss	00000014 patchCord24
20006f28 g     O .data	0000000c Swaveform2
20009504 g     O .bss	00000038 HHchaosMix
20006f1c g     O .data	0000000c Swaveform1
0000c164 g     F .text.itcm	00000100 handleAdditionalFeatureControls(int)
0001d1d8 g     F .text.itcm	0000057c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00018a8c g     F .text.itcm	00000500 AudioFilterLadder::update()
200388f0 g     O .bss	00000014 patchCord21
0000dc04  w    F .text.itcm	00000074 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, MidiSettings, midi::DefaultPlatform>::send(midi::MidiType, unsigned char, unsigned char, unsigned char)
20038814 g     O .bss	00000014 patchCord20
20038850 g     O .bss	00000014 patchCord202
0001dbfa g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
20007450 g     O .data	0000016c __global_locale
20008bac g     O .bss	00000038 BDpitchEnv
00023cb6 g     F .text.itcm	00000016 Print::print(long)
2003a920 g     O .bss	00000004 showSingleFilter
0000bb3c g     F .text.itcm	0000034c saveSamplePack(int)
2003883c g     O .bss	00000014 patchCord201
20038af8 g     O .bss	00000014 patchCord27
0000c3f8 g     F .text.itcm	0000031c switchMenu(int)
000174ba g     F .text.itcm	00000038 SPIClass::notUsingInterrupt(IRQ_NUMBER_t)
200389cc g     O .bss	00000014 patchCord22
000105c0 g     F .text.itcm	00000238 stopRecordingRAM(int, int)
20038828 g     O .bss	00000014 patchCord200
000266c0 g     F .text.itcm	00000036 arm_fir_interpolate_init_f32
20038ad0 g     O .bss	00000014 patchCord25
20003350 g     O .data	0000000c vtable for AudioSynthWaveform
00027e40 g     F .text.itcm	00000020 std::__throw_bad_function_call()
000313b4 g     F .text.itcm	00000018 fputs
00010524 g     F .text.itcm	0000009c flushAudioQueueToRAM()
0002efd4 g     F .text.itcm	0000001e __cxa_call_terminate
2003bdb0 g     O .bss	0000001c sound5
0001b4bc g     F .text.itcm	00000014 BandLimitedWaveform::BandLimitedWaveform()
20038aa8 g     O .bss	00000014 patchCord23
000320c8 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
0003016c g     F .text.itcm	00000018 .hidden restore_core_regs
00025c4c  w    F .text.itcm	00000008 usb_serial_class::availableForWrite()
00000a20  w    F .text.itcm	00000024 AudioPlayArrayResmp::~AudioPlayArrayResmp()
00021d20 g     F .text.itcm	000000d0 SdioCard::readData(unsigned char*)
00000aa0  w    F .text.itcm	00000048 SDFile::~SDFile()
2003bdcc g     O .bss	0000001c sound6
20006f40 g     O .data	00000140 Wire
60002b38 g       .text.code	00000000 __init_array_start
00027fa8 g     F .text.itcm	00000020 __cxa_free_exception
00004924 g     F .text.itcm	00000040 FastLEDshow()
00000ce4  w    F .text.itcm	000000be SDFile::seek(unsigned long long, int)
00027790 g     F .text.itcm	00000204 sinf
2003be04 g     O .bss	0000001c sound8
00035008 g     F .text.itcm	00000078 _calloc_r
2003c962 g     O .bss	00000001 particlesGenerated
000005b4  w    F .text.itcm	00000014 CWS2812SerialController<17, (EOrder)129>::~CWS2812SerialController()
20008134 g     O .data	00000004 recInput
2003bde8 g     O .bss	0000001c sound7
000178ea g     F .text.itcm	00000012 i2cEncoderLibV2::reset()
00020c5c g     F .text.itcm	00000034 SharedSpiCard::writeStart(unsigned long)
0001a658 g     F .text.itcm	0000015c AudioSynthWaveformDc::update()
000200a0 g     F .text.itcm	0000004a FatPartition::freeChain(unsigned long)
2003a870 g     O .bss	00000004 samplePackID
000188a0 g     F .text.itcm	00000054 AudioFilterLadder::LPF(float, int)
20007cf4 g     O .data	00000028 instTypeNames
20038878 g     O .bss	00000014 patchCord204
00027e24 g     F .text.itcm	0000001c std::bad_function_call::~bad_function_call()
00001478 g     F .text.itcm	00000080 initSliderDefTemplates()
00027e08 g     F .text.itcm	00000008 std::bad_function_call::what() const
20038864 g     O .bss	00000014 patchCord203
000020e0 g     F .text.itcm	0000005c clearNoteChannel(unsigned int, unsigned int, unsigned int, unsigned int, bool)
200388a0 g     O .bss	00000014 patchCord206
20008348 g     O .data	0000004c volume_bpm
20007bec g     O .data	0000003c filtermixers
2003888c g     O .bss	00000014 patchCord205
0003016c g     F .text.itcm	00000018 .hidden __restore_core_regs
00030370 g     F .text.itcm	0000028a .hidden __gnu_unwind_execute
000048a0 g     F .text.itcm	00000074 flushAudioQueueToRAM2()
0000929c g     F .text.itcm	0000005c drawPlayButton()
2003bf90 g     O .bss	00000004 transpose
2003a494 g     O .bss	00000368 queue1
00002d00 g     F .text.itcm	000005d4 SN_drum(float, float, float, int)
20001d70 g     O .data	00000128 .hidden __powf_log2_data
20008154 g     O .data	00000018 releaseFilter
0000034c  w    F .text.itcm	00000002 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, MidiSettings, midi::DefaultPlatform>::~MidiInterface()
200086c0 g     O .data	00000000 .hidden __TMC_END__
20038ae4 g     O .bss	00000014 patchCord26
0001deca g     F .text.itcm	000001aa FatFile::read(void*, unsigned int)
200030ac g     O .data	0000000c typeinfo for std::bad_function_call
2000b2b4 g     O .bss	00000008 AudioOutputTDM::dma
70006004 g     O .bss.extram	00000038 CHMixer11
000178fc g     F .text.itcm	0000008a i2cEncoderLibV2::autoconfigInterrupt()
20008720 g     O .bss	00000040 ObjectFLED::dma2next
0001feec g     F .text.itcm	00000126 FatPartition::fatPut(unsigned long, unsigned long)
00016d60 g     F .text.itcm	00000066 nblend(CRGB&, CRGB const&, unsigned char)
0002fa6c g     F .text.itcm	00000010 .hidden __gnu_Unwind_ForcedUnwind
20038b0c g     O .bss	00000014 patchCord28
0000ac7c g     F .text.itcm	000000c0 drawVelocity()
200083df g     O .data	00000001 movingForward
20038b20 g     O .bss	00000014 patchCord29
2000b1bc g     O .bss	00000004 AudioStream::memory_pool
00000fd4  w    F .text.itcm	00000064 AudioAnalyzePeak::AudioAnalyzePeak()
200034d8  w    O .data	0000005c vtable for SDFile
00030288 g     F .text.itcm	00000022 .hidden ___Unwind_Resume
00034454 g     F .text.itcm	0000015c __multiply
00024250 g     F .text.itcm	00000032 String::equals(char const*) const
000345b0 g     F .text.itcm	000000c0 __pow5mult
0001b66c  w    F .text.itcm	00000046 SDClass::exists(char const*)
0002605c g     F .text.itcm	00000104 usb_serial_configure
0002216a g     F .text.itcm	00000020 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
2000b2c8 g     O .bss	00000004 EventResponder::firstInterrupt
000169b0 g     F .text.itcm	00000020 CFastLED::clearData()
00026320 g     F .text.itcm	000001b8 usb_serial_write
0000112c  w    F .text.itcm	000000e8 AudioFilterLadder::AudioFilterLadder()
0002078e g     F .text.itcm	0000003e SharedSpiCard::isBusy()
20003244 g     O .data	0000000c vtable for AudioPlaySdWav
000248a0 g     F .text.itcm	000000bc eepromemu_flash_erase_sector
2003a43c g     O .bss	00000004 pressed
00000007 g       *ABS*	00000000 _itcm_block_count
00028910 g     F .text.itcm	00000014 std::unexpected()
000195b2 g     F .text.itcm	00000000 memcpy_tointerleaveL
00000312  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
00030bd8 g     F .text.itcm	0000000c __malloc_lock
0001d126 g     F .text.itcm	0000001a ExFatFormatter::writeUpcaseUnicode(unsigned short)
20000280 g     O .data	00000148 .hidden __exp2f_data
0001ca5e g     F .text.itcm	000000ec ExFatFile::mkdir(ExFatFile*, char const*, bool)
20004968 g     O .data	00000370 digital_pin_to_info_PGM
0002495c g     F .text.itcm	0000013c eeprom_write_byte
000205a6  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
000245ec g     F .text.itcm	00000024 digitalRead
2000b30c g     O .bss	00000008 AudioOutputI2SHex::dma
00000800  w    F .text.itcm	00000048 SDFile::name()
00016ce6 g     F .text.itcm	0000007a CLEDController::getAdjustmentData(unsigned char)
0000fc60 g     F .text.itcm	000000bc loadSamplePack(unsigned int, bool)
20008394 g     O .data	00000018 waveforms
0002f49c g     F .text.itcm	000002c8 .hidden __udivmoddi4
20038ddc g     O .bss	00000014 patchCord60
60003250 g       *ABS*	00000000 _stextload
00000362  w    F .text.itcm	00000014 std::vector<PendingNote, std::allocator<PendingNote> >::~vector()
00031c70 g     F .text.itcm	0000000a fcvtf
00020e1e g     F .text.itcm	00000016 DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0001f700 g     F .text.itcm	0000005a FatFormatter::initPbs()
20003344 g     O .data	0000000c vtable for AudioFilterLadder
2003bd40 g     O .bss	0000001c sound1
2000bb3c g     O .bss	00000038 envelope1
20037ff4 g     O .bss	00000014 patchCord103
2003bd5c g     O .bss	0000001c sound2
2000628c g     O .data	0000003c GLOB
2003833c g     O .bss	00000014 patchCord144
2000b304 g     O .bss	00000008 AudioInputI2SQuad::dma
00028ce4 g     F .text.itcm	00000004 std::runtime_error::what() const
20038710 g     O .bss	00000014 patchCord189
20037fe0 g     O .bss	00000014 patchCord102
00030668 g     F .text.itcm	00000010 free
20038314 g     O .bss	00000014 patchCord142
20007c7c g     O .data	0000003c freeverbmixers
00022148 g     F .text.itcm	0000000a SdSpiArduinoDriver::end()
2000abb8 g     O .bss	00000038 SNtoneEnv
20038328 g     O .bss	00000014 patchCord143
2000b29c g     O .bss	00000008 AudioOutputMQS::dma
00004e50 g     F .text.itcm	000000b8 unpaint()
200386fc g     O .bss	00000014 patchCord188
20037fcc g     O .bss	00000014 patchCord101
2000bab0 g     O .bss	00000018 cents
20038300 g     O .bss	00000014 patchCord141
60001ad8 g     F .text.code	000000b4 CrashReportClass::clear()
00000140  w    F .text.itcm	00000002 Print::flush()
2000bc8c g     O .bss	00000038 envelope4
20038698 g     O .bss	00000014 patchCord183
20037fb8 g     O .bss	00000014 patchCord100
200386e8 g     O .bss	00000014 patchCord187
20007c68 g     O .data	00000014 frec
00016a18 g     F .text.itcm	000000d4 CFastLED::show(unsigned char)
2003bed0 g     O .bss	00000038 synthmixer14
200386d4 g     O .bss	00000014 patchCord186
20038684 g     O .bss	00000014 patchCord182
2000bb04 g     O .bss	00000038 envelope0
200382ec g     O .bss	00000014 patchCord140
00028d68 g     F .text.itcm	00000048 std::logic_error::~logic_error()
0001bd20 g     F .text.itcm	00000014 ExFatFile::close()
00028288 g     F .text.itcm	00000002 std::exception::~exception()
200386c0 g     O .bss	00000014 patchCord185
200094cc g     O .bss	00000038 HHMixer
2000bd34 g     O .bss	00000038 envelope7
200386ac g     O .bss	00000014 patchCord184
00000756  w    F .text.itcm	0000001e SDFile::peek()
00034398 g     F .text.itcm	00000060 __lo0bits
0000eba0 g     F .text.itcm	000001d4 handleNoteOn(int, unsigned char, unsigned char)
00001278  w    F .text.itcm	00000064 AudioSynthWaveform::AudioSynthWaveform()
000009d8  w    F .text.itcm	0000002a SDFile::isDirectory()
000195f2 g     F .text.itcm	00000000 memcpy_tointerleaveR
2000bc54 g     O .bss	00000038 envelope3
0002f0fc g     F .text.itcm	0000027a .hidden __subdf3
20007a88 g     O .data	00000004 clockMode
00017a14 g     F .text.itcm	0000000c i2cEncoderLibV2::writeMax(long)
00020578 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
2000bc1c g     O .bss	00000038 envelope2
00020e34 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
00028ce4 g     F .text.itcm	00000004 std::logic_error::what() const
60002fcc g     O .text.progmem	00000275 usb_config_descriptor_480
00027e68 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
000021ac g     F .text.itcm	00000034 updateBrightness()
2000bcc4 g     O .bss	00000038 envelope5
2000b31c g     O .bss	00000008 AudioOutputPT8211::dma
0000b16c g     F .text.itcm	00000090 animateSingle()
0001c5b2 g     F .text.itcm	00000012 ExFatFile::open(ExFatVolume*, char const*, int)
20038bfc g     O .bss	00000014 patchCord39
20007c64 g     O .data	00000004 flowMode
20037f8c g     O .bss	00000004 particleCount
0002073e g     F .text.itcm	00000028 SharedSpiCard::spiStart()
20007080 g     O .data	00000140 Wire1
0002f100 g     F .text.itcm	00000276 .hidden __adddf3
2003801c g     O .bss	00000014 patchCord105
00034bc4 g     F .text.itcm	00000054 _fflush_r
000018cc g     F .text.itcm	00000030 initGlobalVars()
70001974 g     O .bss.extram	00000038 Smixer1_0
00020724  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000246c g     F .text.itcm	00000070 getDefaultFastFilterValue(int, SettingArray, signed char)
00016998  w    F .text.itcm	00000002 yield
2003a198 g     O .bss	00000010 persistentNoteOn
20038008 g     O .bss	00000014 patchCord104
20038364 g     O .bss	00000014 patchCord146
00028a20 g     F .text.itcm	0000006e __cxa_rethrow
20038044 g     O .bss	00000014 patchCord107
20038b98 g     O .bss	00000014 patchCord34
00005238 g     F .text.itcm	00000018 getCurrentMenuMainSetting()
20038f44 g     O .bss	00000014 patchCord77
2003838c g     O .bss	00000014 patchCord148
20038350 g     O .bss	00000014 patchCord145
20038030 g     O .bss	00000014 patchCord106
200071c0 g     O .data	00000140 Wire2
00024042 g     F .text.itcm	0000000e String::~String()
00024014 g     F .text.itcm	00000018 random(unsigned long)
000320d0 g     F .text.itcm	00000000 memchr
00009548 g     F .text.itcm	00000050 drawClockMode()
20038378 g     O .bss	00000014 patchCord147
20006284 g     O .data	00000004 F_BUS_ACTUAL
0002fa7c g     F .text.itcm	00000044 .hidden __gnu_Unwind_Resume
20003118 g     O .data	00000024 typeinfo name for __cxxabiv1::__foreign_exception
60002d18 g     O .text.progmem	0000001e usb_string_product_name_default
20038be8 g     O .bss	00000014 patchCord38
0000a9e8 g     F .text.itcm	000000a0 drawNumber(float, CRGB, int)
00020d5c g     F .text.itcm	0000004c SharedSpiCard::writeData(unsigned char, unsigned char const*)
700019ac g     O .bss.extram	00000038 Smixer1_1
00008668 g     F .text.itcm	000002c8 playSound(int, int)
00024c1c g     F .text.itcm	00000008 operator delete(void*, unsigned int)
00034c18 g     F .text.itcm	00000022 __sread
0000112c  w    F .text.itcm	000000e8 AudioFilterLadder::AudioFilterLadder()
600023b6 g     F .text.code	00000002 startup_default_middle_hook
000005c8  w    F .text.itcm	0000001c CWS2812SerialController<17, (EOrder)129>::~CWS2812SerialController()
00026ef0 g     F .text.itcm	00000320 powf
000175b8 g     F .text.itcm	00000036 i2cEncoderLibV2::i2cEncoderLibV2(unsigned char)
200086c0 g       .data	00000000 _edata
000170a2 g     F .text.itcm	0000003e fl::EngineEvents::_onStripAdded(CLEDController*, unsigned long)
00017a08 g     F .text.itcm	0000000c i2cEncoderLibV2::writeCounter(long)
2003c96d g     O .bss	00000001 stepIsDue
00009b08 g     F .text.itcm	000000a4 showFilterNames(unsigned char)
0000a4bc g     F .text.itcm	00000074 setDrumDefaultValues(int)
00028db0 g     F .text.itcm	00000048 std::length_error::~length_error()
00030250 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXC
2003a874 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000e278  w    F .text.itcm	00000020 std::_Function_handler<void (unsigned char, unsigned char, unsigned char, bool, bool), audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()::{lambda(unsigned char, unsigned char, unsigned char, bool, bool)#1}>::_M_invoke(std::_Any_data const&, unsigned char&&, unsigned char&&, unsigned char&&, bool&&, bool&&)
00023526 g     F .text.itcm	0000013e HardwareSerialIMXRT::IRQHandler()
200388b4 g     O .bss	00000014 patchCord207
00000020 g     F .text.itcm	000000d4 fastTouchRead(int)
0000949c g     F .text.itcm	00000038 drawText(char const*, int, int, CRGB)
2003c928 g     O .bss	00000002 AudioStream::cpu_cycles_total_max
00032078 g     F .text.itcm	00000048 __libc_init_array
200388c8 g     O .bss	00000014 patchCord208
0001dacc g     F .text.itcm	00000028 ExFatPartition::chainSize(unsigned long)
000252e0  w    F .text.itcm	00000030 _sbrk
2000b28c g     O .bss	00000004 AudioOutputI2S::block_right_1st
200388dc g     O .bss	00000014 patchCord209
2003c95d g     O .bss	00000001 isNowPlaying
00000b20  w    F .text.itcm	00000056 SDFile::setCreateTime(DateTimeFields const&)
20038670 g     O .bss	00000014 patchCord181
0002fae4 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Get
0001cd7a g     F .text.itcm	000000e4 ExFatFile::truncate()
00021f90 g     F .text.itcm	00000008 sdCsWrite(unsigned char, bool)
00005790 g     F .text.itcm	00000150 readSetting(SettingArray, signed char, unsigned char)
2003865c g     O .bss	00000014 patchCord180
20018a64 g     O .bss	000062a0 freeverb13
0001ab4c g     F .text.itcm	0000002a BandLimitedWaveform::generate_square(unsigned long, int)
200082a0 g     O .data	00000004 transportMode
00034dec g     F .text.itcm	0000002c _lseek_r
200127c4 g     O .bss	000062a0 freeverb11
00019632 g     F .text.itcm	00000000 memcpy_tointerleaveQuad
20037868 g     O .bss	00000011 hasNotes
2000ba8c g     O .bss	00000010 buttonPressStartTime
2001ed04 g     O .bss	000062a0 freeverb14
000012dc  w    F .text.itcm	00000084 AudioSynthWaveformModulated::AudioSynthWaveformModulated()
0001e430 g     F .text.itcm	000000ca FatFile::open(FatFile*, char const*, int)
20038f6c g     O .bss	00000014 patchCord79
2000b2ec g     O .bss	00000008 AudioInputI2SOct::dma
0001b70c  w    F .text.itcm	0000005e SDClass::remove(char const*)
00030288 g     F .text.itcm	00000022 .hidden _Unwind_Resume
00020a9c g     F .text.itcm	0000003a SharedSpiCard::readOCR(unsigned long*)
2003be98 g     O .bss	00000038 synthmixer13
00019390 g     F .text.itcm	000000cc AudioInputI2S::begin()
00024142 g     F .text.itcm	00000024 String::String(unsigned int, unsigned char)
0000d8dc  w    F .text.itcm	00000158 basesampler<AudioPlayArrayResmp, audiosample>::noteEvent(unsigned char, unsigned char, bool, bool)
20008b48 g     O .bss	0000003c BDfilter
00019a7c g     F .text.itcm	000000dc AudioOutputI2S::begin()
00025630 g     F .text.itcm	00000498 usb_isr
0002f398 g     F .text.itcm	00000022 .hidden __floatsidf
2003be60 g     O .bss	00000038 synthmixer11
00020730  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
20003164 g     O .data	00000010 typeinfo name for std::logic_error
00017a2c g     F .text.itcm	0000000c i2cEncoderLibV2::writeStep(long)
00028298 g     F .text.itcm	0000000e std::bad_exception::~bad_exception()
2000ad84 g     O .bss	00000038 SnFilterMix
2000a3fc g     O .bss	00000038 SNenv
0002272c  w    F .text.itcm	00000002 TwoWire::flush()
00027bb8 g     F .text.itcm	00000010 .hidden __math_uflow
20008130 g     O .data	00000004 recChannelClear
20004e48 g     O .data	00000204 step_table
20038bac g     O .bss	00000014 patchCord35
0001abac g     F .text.itcm	000003a2 AudioSynthWaveform::update()
20038f58 g     O .bss	00000014 patchCord78
00028bac g     F .text.itcm	0000002c std::type_info::operator==(std::type_info const&) const
20038bc0 g     O .bss	00000014 patchCord36
2003789c g     O .bss	00000004 isPressed
0000b1fc g     F .text.itcm	00000114 checkTouchInputs()
00004964 g     F .text.itcm	00000050 clearAllNotesOfChannel()
0002351e g     F .text.itcm	00000008 HardwareSerialIMXRT::write(unsigned char)
0002664c g     F .text.itcm	00000074 sm_set_pool
00027c28 g     F .text.itcm	00000012 .hidden __math_check_uflow
20038bd4 g     O .bss	00000014 patchCord37
00028924 g     F .text.itcm	00000010 std::get_terminate()
00028f08 g     F .text.itcm	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
000049b4 g     F .text.itcm	00000128 startFastRecord()
60001640 g     F .text.code	00000028 ResetHandler
00028e78 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
20000d28 g     O .data	00001048 .hidden __pow_log_data
0001bb4a g     F .text.itcm	0000007c SDClass::format(int, char, Print&)
00028f48 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
20007d80 g     O .data	00000030 maxParamVal
20007a8c g     O .data	00000018 cutoff
6003a824 g       *ABS*	00000000 _sdataload
0000034e  w    F .text.itcm	00000014 std::vector<PendingNoteEvent, std::allocator<PendingNoteEvent> >::~vector()
00026300 g     F .text.itcm	00000020 usb_serial_getchar
00024a98 g     F .text.itcm	00000020 eeprom_write_block
20037be8 g     O .bss	00000040 loadedSampleLen
000175f8 g     F .text.itcm	00000064 i2cEncoderLibV2::readEncoderByte(unsigned char)
70001a54 g     O .bss.extram	00000038 Smixer2_1
20007b78 g     O .data	00000018 filterAmount
000024dc g     F .text.itcm	00000084 setDefaultFastFilterValue(int, SettingArray, signed char, int)
0000df7c  w    F .text.itcm	000001ba PitchedArraySamplePlay::play(unsigned char, audiovoice<AudioPlayArrayResmp>*, audiosample*)
2000b314 g     O .bss	00000008 AudioOutputI2SOct::dma
700019e4 g     O .bss.extram	00000038 Smixer1_2
00031108 g     F .text.itcm	00000040 sprintf
0001e550 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
0002038c g     F .text.itcm	00000028 FsBaseFile::close()
00017b90 g     F .text.itcm	00000060 AudioControlSGTL5000::write(unsigned int, unsigned int)
00027ff0 g     F .text.itcm	00000000 __cxa_end_cleanup
000006b0  w    F .text.itcm	0000006a SDFile::getCreateTime(DateTimeFields&)
70001a1c g     O .bss.extram	00000038 Smixer2_0
00000a44  w    F .text.itcm	0000001a SDFile::flush()
2000a3c4 g     O .bss	00000038 SNchaosMix
00020c90 g     F .text.itcm	0000009a SharedSpiCard::erase(unsigned long, unsigned long)
00028ba4 g     F .text.itcm	00000002 std::type_info::~type_info()
00003bf8 g     F .text.itcm	000000c8 updateMixerGains(int)
70001a8c g     O .bss.extram	00000038 Smixer2_2
0001f0e8 g     F .text.itcm	00000300 FatFile::open(FatFile*, FatLfn_t*, int)
00023094 g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
2003c95a g     O .bss	00000001 firstcheck
0001ed9c g     F .text.itcm	00000128 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00024ac8 g     F .text.itcm	00000134 memcpy
2000b96c g     O .bss	00000020 bitcrusher13
200083dc g     O .data	00000001 filterfreshsetted
200383a0 g     O .bss	00000014 patchCord149
0001c630 g     F .text.itcm	000000a0 ExFatFile::addCluster()
00025c2c  w    F .text.itcm	00000008 usb_serial_class::peek()
00028b78 g     F .text.itcm	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00028990 g     F .text.itcm	00000058 __cxa_init_primary_exception
2000b1a0 g     O .bss	00000004 FsDateTime::callback2
00028934 g     F .text.itcm	00000010 std::get_unexpected()
20038058 g     O .bss	00000014 patchCord108
0002394e  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#2}::_FUN(void*, void*)
2000adc0  w    O .bss	00000004 guard variable for fl::Singleton<fl::EngineEvents, 0>::instance()::instance
2003806c g     O .bss	00000014 patchCord109
00024094 g     F .text.itcm	00000040 String::copy(char const*, unsigned int)
2000b1a4 g     O .bss	00000008 ObjectFLED::dma1
00024c88 g     F .text.itcm	00000388 dtostrf
2000bad0 g     O .bss	00000004 currentMode
0002218a g     F .text.itcm	00000014 SdSpiArduinoDriver::send(unsigned char)
00000180  w    F .text.itcm	00000012 File::write(unsigned char const*, unsigned int)
0001d8c8 g     F .text.itcm	000000b2 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00030be4 g     F .text.itcm	0000000c __malloc_unlock
00028f04  w    F .text.itcm	00000004 std::string::_Rep::_M_destroy(std::allocator<char> const&)
00028fbc g     F .text.itcm	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00003db4 g     F .text.itcm	000000cc forceAllMixerGainsToTarget()
2000a470 g     O .bss	00000020 SNnoise
0002fb78 g     F .text.itcm	00000084 .hidden __gnu_Unwind_Backtrace
0000096c  w    F .text.itcm	0000001e StreamFile<FsBaseFile, unsigned long long>::peek()
00021f0c g     F .text.itcm	00000060 SdioCard::stopTransmission(bool)
0002f100 g     F .text.itcm	00000276 .hidden __aeabi_dadd
00021788 g     F .text.itcm	0000008c SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0002f410 g     F .text.itcm	0000005a .hidden __aeabi_l2d
200378d8 g     O .bss	00000004 lastFlowPage
00023458 g     F .text.itcm	000000c6 HardwareSerialIMXRT::write9bit(unsigned long)
000010b0  w    F .text.itcm	0000007c AudioFilterStateVariable::AudioFilterStateVariable()
0001aae2 g     F .text.itcm	00000040 BandLimitedWaveform::new_step_check_saw(unsigned long, int)
000094d4 g     F .text.itcm	00000074 drawRecChannelClear()
00032180 g     F .text.itcm	000000dc strlen
00011b2c g     F .text.itcm	000004d0 loop
60002a4c g     F .text.code	00000054 analog_init
00022304 g     F .text.itcm	000000aa lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
00000da4  w    F .text.itcm	00000060 newdigate::ResamplingArrayReader::~ResamplingArrayReader()
20037f54 g     O .bss	00000010 oldButtons
0000be88 g     F .text.itcm	0000009c startRecordingRAM()
00028bd8 g     F .text.itcm	0000010c __gnu_cxx::__verbose_terminate_handler()
0000d61c g     F .text.itcm	000000ac drawBPMScreen()
00016c70 g     F .text.itcm	00000054 CLEDController::CLEDController()
00017e80  w    F .text.itcm	00000028 AudioControlSGTL5000::volume(float)
00034358 g     F .text.itcm	00000040 __hi0bits
60002340 g     F .text.code	00000014 CrashReportClass::operator bool()
00024142 g     F .text.itcm	00000024 String::String(unsigned int, unsigned char)
00002734 g     F .text.itcm	00000070 tmpMuteAll(bool)
20037dbc g     O .bss	00000038 mixer_stereoR
2003a41c g     O .bss	00000004 playStartTime
00004df8 g     F .text.itcm	00000058 clearPageX(int)
2000a434 g     O .bss	0000003c SNfilt
20009494 g     O .bss	00000038 HHMix
00037154 g     F .text.itcm	00000106 _wcsnrtombs_l
0000017c  w    F .text.itcm	00000004 CLEDController::getMaxRefreshRate() const
00030184 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP
600023b8 g     F .text.code	00000002 startup_default_late_hook
00004914 g     F .text.itcm	00000010 FastLEDclear()
00000ec8  w    F .text.itcm	00000030 File::~File()
0000c8f0 g     F .text.itcm	0000015c processRecPeaks()
200073a8 g     O .data	00000090 AudioFilterLadder::interpolation_coeffs
0000aa88 g     F .text.itcm	00000148 drawFilterCheck(int, FilterType, CRGB)
2000b98c g     O .bss	00000020 bitcrusher14
2000b1c4 g     O .bss	00000070 AudioStream::memory_pool_available_mask
0000af48 g     F .text.itcm	00000134 drawBase()
0000a530 g     F .text.itcm	000001c0 drawRecMode()
0001699a g     F .text.itcm	00000014 CFastLED::CFastLED()
2003c963 g     O .bss	00000001 patternChangeActive
00023104 g     F .text.itcm	000000a8 DMAChannel::begin(bool)
00001360  w    F .text.itcm	00000044 AudioSynthWaveformDc::AudioSynthWaveformDc()
20037d84 g     O .bss	00000038 mixer_stereoL
000001c8  w    F .text.itcm	0000002c File::read()
00000170  w    F .text.itcm	00000004 CLEDController::size()
00020838 g     F .text.itcm	0000000c SharedSpiCard::readData(unsigned char*)
00019690 g     F .text.itcm	000000ce AudioMixer4::update()
2003a8f8 g     O .bss	00000018 semitones
000218c4 g     F .text.itcm	0000008c SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000001f4  w    F .text.itcm	00000022 File::write(unsigned char)
2000ad48 g     O .bss	0000003c SnFilter
00011204 g     F .text.itcm	00000088 checkButtons()
0000cfd0 g     F .text.itcm	00000290 savePattern(bool)
00008dec g     F .text.itcm	000000a8 runAnimation()
0001700c g     F .text.itcm	00000032 fl::EngineEvents::_onBeginFrame()
00016bb4 g     F .text.itcm	00000028 CFastLED::clear(bool)
00022e68 g     F .text.itcm	00000018 AudioStream::receiveReadOnly(unsigned int)
20037c28 g     O .bss	00000040 loadedSampleRate
000241e4 g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
00021178  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00001038  w    F .text.itcm	00000078 AudioEffectEnvelope::AudioEffectEnvelope()
708397c4 g     O .bss.extram	000d7d20 recBuffer
20003214  w    O .data	0000000c vtable for AudioStream
000071b8 g     F .text.itcm	000002b4 pad_synth(int, int, int, int, int, int, int)
20007d20 g     O .data	0000004c loadSaveTrack
20007a4c g     O .data	0000003c bitcrushers
00018a38 g     F .text.itcm	00000010 AudioFilterLadder::frequency(float)
000206b8 g     F .text.itcm	0000006c DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
2000bb74 g     O .bss	00000038 envelope11
2000bda8 g     O .bss	00000010 extmem_smalloc_pool
00021f98 g     F .text.itcm	00000128 SdSpiArduinoDriver::activate()
20048000 g       .text.csf	00000000 _estack
0002629c g     F .text.itcm	00000064 usb_serial_flush_input
00034dc8 g     F .text.itcm	00000024 _isatty_r
2000bbe4 g     O .bss	00000038 envelope14
0002244c g     F .text.itcm	000000a8 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00020d2a g     F .text.itcm	00000032 SharedSpiCard::writeStop()
2000bbac g     O .bss	00000038 envelope13
00028ba8 g     F .text.itcm	00000004 std::type_info::__is_pointer_p() const
00022c04 g     F .text.itcm	00000010 lpi2c3_isr()
0002828c g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
000008c0  w    F .text.itcm	000000ac SDFile::openNextFile(unsigned char)
0001c4cc g     F .text.itcm	000000e6 ExFatFile::open(ExFatFile*, char const*, int)
200080fc g     O .data	00000004 patternMode
2003c92e g     O .bss	00000002 AudioOutputI2S::block_left_offset
2003a914 g     O .bss	0000000c sgtl5000_1


